{
    "uuid": "ec9599aa-9d12-40d3-9986-eedb0cf7d382",
    "title": "所有集群列表",
    "queryMocks": "",
    "schema": {
        "version": "1.0.0",
        "componentsMap": [
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Icon",
                "main": "",
                "destructuring": true,
                "componentName": "Icon"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Input",
                "main": "",
                "destructuring": true,
                "componentName": "Input"
            },
            {
                "package": "@infracreate/console-widget",
                "version": "0.1.0",
                "exportName": "ApeCascader",
                "main": "src/index.ts",
                "destructuring": true,
                "subName": "",
                "componentName": "ApeCascader"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Space",
                "main": "",
                "destructuring": true,
                "componentName": "Space"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Button",
                "main": "",
                "destructuring": true,
                "componentName": "Button"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Tooltip",
                "main": "",
                "destructuring": true,
                "componentName": "Tooltip"
            },
            {
                "package": "@infracreate/console-widget",
                "version": "0.1.0",
                "exportName": "Illustration",
                "main": "src/index.ts",
                "destructuring": true,
                "subName": "",
                "componentName": "Illustration"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Typography",
                "main": "",
                "destructuring": true,
                "subName": "Title",
                "componentName": "Typography.Title"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Typography",
                "main": "",
                "destructuring": true,
                "subName": "Paragraph",
                "componentName": "Typography.Paragraph"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Card",
                "main": "",
                "destructuring": true,
                "componentName": "Card"
            },
            {
                "package": "@infracreate/console-widget",
                "version": "0.1.0",
                "exportName": "Box",
                "main": "src/index.ts",
                "destructuring": true,
                "subName": "",
                "componentName": "Box"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Tag",
                "main": "",
                "destructuring": true,
                "componentName": "Tag"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Popover",
                "main": "",
                "destructuring": true,
                "componentName": "Popover"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Typography",
                "main": "",
                "destructuring": true,
                "subName": "Text",
                "componentName": "Typography.Text"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Avatar",
                "main": "",
                "destructuring": true,
                "componentName": "Avatar"
            },
            {
                "package": "@infracreate/console-widget",
                "version": "0.1.0",
                "exportName": "Table",
                "main": "src/index.ts",
                "destructuring": true,
                "subName": "",
                "componentName": "Table"
            },
            {
                "package": "@infracreate/console-widget",
                "version": "0.1.0",
                "exportName": "Block",
                "main": "src/index.ts",
                "destructuring": true,
                "subName": "",
                "componentName": "Block"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Form",
                "main": "",
                "destructuring": true,
                "subName": "Item",
                "componentName": "Form.Item"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Form",
                "main": "",
                "destructuring": true,
                "componentName": "Form"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Col",
                "main": "",
                "destructuring": true,
                "componentName": "Col"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Row",
                "main": "",
                "destructuring": true,
                "componentName": "Row"
            },
            {
                "package": "@alilc/antd-lowcode-materials",
                "version": "1.2.2",
                "exportName": "Modal",
                "main": "",
                "destructuring": true,
                "componentName": "Modal"
            },
            {
                "devMode": "lowCode",
                "componentName": "Page"
            }
        ],
        "componentsTree": [
            {
                "componentName": "Page",
                "id": "ec9599aa-9d12-40d3-9986-eedb0cf7d382",
                "props": {},
                "title": "",
                "isLocked": false,
                "condition": true,
                "conditionGroup": "",
                "dataSource": {
                    "list": [
                        {
                            "dataHandler": {
                                "type": "JSFunction",
                                "value": "(response) => {\n  return response;\n}"
                            },
                            "errorHandler": {
                                "type": "JSFunction",
                                "value": "(err) => {\n\n}"
                            },
                            "shouldFetch": {
                                "type": "JSFunction",
                                "value": "() => {\n  return true;\n}"
                            },
                            "willFetch": {
                                "type": "JSFunction",
                                "value": "(options) => {\n  return options;\n}"
                            },
                            "options": {
                                "params": {
                                    "orgName": {
                                        "type": "JSExpression",
                                        "value": "this.utils.user.organization.name"
                                    }
                                },
                                "headers": {
                                    "x-data-store": "cloud"
                                },
                                "method": "get",
                                "isCors": true,
                                "uri": "/api/v1/organizations/{orgName}/clusters"
                            },
                            "id": "listCluster",
                            "type": "fetch",
                            "isInit": false
                        },
                        {
                            "dataHandler": {
                                "type": "JSFunction",
                                "value": "(response) => {\n  return response;\n}"
                            },
                            "errorHandler": {
                                "type": "JSFunction",
                                "value": "(err) => {\n\n}"
                            },
                            "shouldFetch": {
                                "type": "JSFunction",
                                "value": "() => {\n  return true;\n}"
                            },
                            "willFetch": {
                                "type": "JSFunction",
                                "value": "(options) => {\n  return options;\n}"
                            },
                            "options": {
                                "params": {
                                    "orgName": {
                                        "type": "JSExpression",
                                        "value": "this.utils.user.organization.name"
                                    }
                                },
                                "headers": {
                                    "x-data-store": "cloud"
                                },
                                "method": "get",
                                "isCors": true,
                                "uri": "/api/v1/organizations/{orgName}/tags"
                            },
                            "id": "listOrgTags",
                            "type": "fetch",
                            "isInit": false
                        },
                        {
                            "dataHandler": {
                                "type": "JSFunction",
                                "value": "(response) => {\n  return response;\n}"
                            },
                            "errorHandler": {
                                "type": "JSFunction",
                                "value": "(err) => {\n\n}"
                            },
                            "shouldFetch": {
                                "type": "JSFunction",
                                "value": "() => {\n  return true;\n}"
                            },
                            "willFetch": {
                                "type": "JSFunction",
                                "value": "(options) => {\n  return options;\n}"
                            },
                            "options": {
                                "params": {
                                    "orgName": {
                                        "type": "JSExpression",
                                        "value": "this.utils.user.organization.name"
                                    },
                                    "tagId": "tagId"
                                },
                                "headers": {
                                    "x-data-store": "cloud"
                                },
                                "method": "delete",
                                "isCors": true,
                                "uri": "/api/v1/organizations/{orgName}/tags/{tagId}"
                            },
                            "id": "deleteTags",
                            "type": "fetch",
                            "isInit": false
                        },
                        {
                            "dataHandler": {
                                "type": "JSFunction",
                                "value": "(response) => {\n  return response;\n}"
                            },
                            "errorHandler": {
                                "type": "JSFunction",
                                "value": "(err) => {\n\n}"
                            },
                            "shouldFetch": {
                                "type": "JSFunction",
                                "value": "() => {\n  return true;\n}"
                            },
                            "willFetch": {
                                "type": "JSFunction",
                                "value": "(options) => {\n  return options;\n}"
                            },
                            "options": {
                                "params": {
                                    "orgName": {
                                        "type": "JSExpression",
                                        "value": "this.utils.user.organization.name"
                                    },
                                    "body": "body"
                                },
                                "headers": {
                                    "x-data-store": "cloud"
                                },
                                "method": "post",
                                "isCors": true,
                                "uri": "/api/v1/organizations/{orgName}/tags"
                            },
                            "id": "createTag",
                            "type": "fetch",
                            "isInit": false
                        },
                        {
                            "dataHandler": {
                                "type": "JSFunction",
                                "value": "(response) => {\n  return response;\n}"
                            },
                            "errorHandler": {
                                "type": "JSFunction",
                                "value": "(err) => {\n\n}"
                            },
                            "shouldFetch": {
                                "type": "JSFunction",
                                "value": "() => {\n  return true;\n}"
                            },
                            "willFetch": {
                                "type": "JSFunction",
                                "value": "(options) => {\n  return options;\n}"
                            },
                            "options": {
                                "params": {
                                    "orgName": {
                                        "type": "JSExpression",
                                        "value": "this.utils.user.organization.name"
                                    },
                                    "clusterName": "clusterName"
                                },
                                "headers": {
                                    "x-data-store": "cloud"
                                },
                                "method": "get",
                                "isCors": true,
                                "uri": "/api/v1/organizations/{orgName}/clusters/{clusterName}"
                            },
                            "id": "getCluster",
                            "type": "fetch",
                            "isInit": false
                        },
                        {
                            "dataHandler": {
                                "type": "JSFunction",
                                "value": "(response) => {\n  return response;\n}"
                            },
                            "errorHandler": {
                                "type": "JSFunction",
                                "value": "(err) => {\n\n}"
                            },
                            "shouldFetch": {
                                "type": "JSFunction",
                                "value": "() => {\n  return true;\n}"
                            },
                            "willFetch": {
                                "type": "JSFunction",
                                "value": "(options) => {\n  return options;\n}"
                            },
                            "options": {
                                "params": {
                                    "orgName": {
                                        "type": "JSExpression",
                                        "value": "this.utils.user.organization.name"
                                    },
                                    "clusterIds": "clusterIds"
                                },
                                "headers": {
                                    "x-data-store": "cloud"
                                },
                                "method": "get",
                                "isCors": true,
                                "uri": "/api/v1/organizations/{orgName}/clusterTags"
                            },
                            "id": "getTags",
                            "type": "fetch",
                            "isInit": false
                        },
                        {
                            "dataHandler": {
                                "type": "JSFunction",
                                "value": "(response) => {\n  return response;\n}"
                            },
                            "errorHandler": {
                                "type": "JSFunction",
                                "value": "(err) => {\n\n}"
                            },
                            "shouldFetch": {
                                "type": "JSFunction",
                                "value": "() => {\n  return true;\n}"
                            },
                            "willFetch": {
                                "type": "JSFunction",
                                "value": "(options) => {\n  return options;\n}"
                            },
                            "options": {
                                "params": {
                                    "orgName": {
                                        "type": "JSExpression",
                                        "value": "this.utils.user.organization.name"
                                    }
                                },
                                "headers": {
                                    "x-data-store": "cloud"
                                },
                                "method": "get",
                                "isCors": true,
                                "uri": "/api/v1/organizations/{orgName}/environments"
                            },
                            "id": "listEnvironment",
                            "type": "fetch",
                            "isInit": false
                        },
                        {
                            "dataHandler": {
                                "type": "JSFunction",
                                "value": "(response) => {\n  return response;\n}"
                            },
                            "errorHandler": {
                                "type": "JSFunction",
                                "value": "(err) => {\n\n}"
                            },
                            "shouldFetch": {
                                "type": "JSFunction",
                                "value": "() => {\n  return true;\n}"
                            },
                            "willFetch": {
                                "type": "JSFunction",
                                "value": "(options) => {\n  return options;\n}"
                            },
                            "options": {
                                "params": {
                                    "orgName": {
                                        "type": "JSExpression",
                                        "value": "this.utils.user?.organization?.name"
                                    },
                                    "clusterName": "clusterName"
                                },
                                "headers": {
                                    "x-data-store": "cloud"
                                },
                                "method": "delete",
                                "isCors": true,
                                "uri": "/api/v1/organizations/{orgName}/clusters/{clusterName}"
                            },
                            "id": "deleteCluster",
                            "type": "fetch",
                            "isInit": false
                        }
                    ]
                },
                "originCode": "class Page extends Component {\n  state = {\n    pageInit: false,\n    // clusters列表\n    clustersLoading: false,\n    initialClusters: [],\n    clusters: [],\n    tags: [],\n    newTags: [],\n    cascadedData: [],\n    currentTag: '',\n    tagKeys: null,\n    tagValues: null,\n    open: false,\n    currentId: '',\n    hasTag: false,\n    // 关键字搜索&&条件过滤\n    searchKey: '',\n    filterKeys: [\"engine\", \"mode\", \"status\", \"orgName\"],\n  }\n\n  getMode(record) {\n    const config = this.utils[`cluster_definition_${record.engine}`];\n    const mode = config?.modes?.find(option => {\n      return option.name === record?.mode\n    });\n    return mode?.title?.[this.utils.locale]\n  }\n\n  async getOrgTags() {\n    const res = await this.dataSourceMap.listOrgTags.load();\n    const orgTags = res?.items || [];\n    const groupedData = _.groupBy(orgTags, 'key');\n    const cascadedData = orgTags?.length > 0 ? [\n      {\n        value: 'key',\n        label: this.i18n('tag_key'),\n        disabled: true,\n      }, ..._.map(groupedData, (values, key) => ({\n        value: key,\n        label: key,\n        children: [\n          {\n            value: 'value',\n            label: this.i18n('tag_val'),\n            disabled: true,\n          },\n          // {\n          //   value: '_all',\n          //   label: 'All'\n          // },\n          ..._.map(values, item => ({\n            value: item.value,\n            label: item.value\n          }))\n        ]\n      }))] : [];\n    this.setState({\n      cascadedData\n    })\n  }\n\n  getClustersFilterResult() {\n    let data = this.state.clusters\n      ?.filter((cluster) => { // 搜索集群\n        return cluster.name?.match(this.state.query.name)\n      })\n      ?.filter((cluster) => { // 过滤引擎\n        return this.state.query.engine ? _.includes(this.state.query.engine, cluster.engine) : true\n      })\n      ?.filter((cluster) => { // 过滤状态\n        return this.state.query.status ? _.includes(this.state.query.status, cluster.status) : true\n      })\n    if (this.state.query.columnKey && this.state.query.order) {\n      const orderType = this.state.query.order == 'ascend' ? 'asc' : 'desc'\n      data = _.orderBy(data, [this.state.query.columnKey], [orderType]);\n    }\n    return data;\n  }\n\n\n  async init() {\n    this.setState({ clustersLoading: true });\n    const { tagKeys, tagValues } = this.state;\n    const res = (await this.dataSourceMap.listCluster.load({\n        tagKeys,\n        tagValues,\n      }))\n    // 通过url参数初始化过滤值\n    const query = _.pick(this.utils.params, [\n      'engine',\n      'current',\n      'pageSize',\n      'columnKey',\n      'status',\n      'order',\n      'name'\n    ].concat(this.state.filterKeys));\n    query.engine = query.engine == '' ? null : query.engine;\n    query.status = query.status == '' ? null : query.status;\n    query.current = isNaN(parseInt(query.current)) ? 1 : parseInt(query.current)\n    query.pageSize = isNaN(parseInt(query.pageSize)) ? 20 : parseInt(query.pageSize)\n\n    // 设置filter下拉框的值\n    const clusterFilters = this.utils.getFilters(res?.items || {}, this.state.filterKeys.map(key => ({\n      key\n    })));\n\n    this.setState({\n      clusters: _.orderBy(res?.items || {}, ['createdAt'], ['desc']),\n      clusterFilters,\n      clustersLoading: false,\n      query,\n      pageInit: true,\n      searchKey: query?.name || ''\n    })\n  }\n\n  //关键词\n  onSearchCluster(event) {\n    const query = {\n      ...this.state.query,\n      current: 1,\n      name: event.target.value,\n    }\n    this.setState({ query });\n    this.history.replace(`${this.location.pathname}?${this.utils.qs.stringify(query)}`);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchKey: event.target.value, });\n  }\n\n\n  onTableDataChange(pagination, filters, sorter) {\n    // 分页数据变化\n    const { current, pageSize } = pagination;\n    // 搜索数据变化\n    const filterQuery = {}\n    _.forEach(filters, (value, key) => {\n      // if (!_.isEmpty(value)) {\n      filterQuery[key] = value\n      // }\n    })\n    // 排序数据变化\n    const { order, columnKey } = sorter;\n    const orderQuery = {};\n    if (columnKey) {\n      Object.assign(orderQuery, { order, columnKey })\n    }\n    const query = { ...this.state.query, current, pageSize, ...filterQuery, ...orderQuery }\n    this.history.replace(`${this.location.pathname}?${this.utils.qs.stringify(query)}`);\n    this.setState({ query });\n  }\n\n\n  //排序\n  sorterCreatedAt(a, b) {\n    return new Date(a?.createdAt).getTime() - new Date(b?.createdAt).getTime()\n  }\n  sorterName(a, b) {\n    return a.name.localeCompare(b.name);\n  }\n\n  async onRecordClick(e, record) {\n    const cluster = await this.dataSourceMap.getCluster.load({\n      clusterName: record.name\n    })\n    if (this.utils.isDev()) return;\n    if (cluster) {\n      this.history.push(`/cluster/${cluster?.environmentType}/${record?.engine}/${record?.name}/overview`);\n    }\n  }\n\n  onCreateCluster() {\n    if (this.utils.isDev()) return;\n    const url = `/clusters/create`\n    this.history.push(url)\n  }\n\n  onDeleteCluster(e, record) {\n    const canDelete = record?.terminationPolicy !== \"DoNotTerminate\" || record.status === \"Deleted\";\n    this.utils.modal.confirm({\n      title: `${this.i18n('confirm')}`,\n      content: canDelete ? `${this.i18n('delete')} ${record.name}?` : this.i18n(\"deleteProtect\"),\n      okButtonProps: {\n        disabled: !canDelete,\n        danger: true,\n      },\n      onOk: async () => {\n        this.setState({ clustersLoading: true })\n        const res = await this.dataSourceMap.deleteCluster.load({\n          clusterName: record.name,\n        });\n        this.init()\n      }\n    })\n  }\n\n  onCopy(event, record) {\n    const copyText = record?.name;\n    if (typeof navigator.clipboard === 'undefined' || typeof navigator.clipboard.writeText === 'undefined') {\n      navigator.clipboard = {\n        writeText: function copyTextToClipboard(copyText) {\n          const input = document.createElement('input');\n          input.setAttribute('value', copyText);\n          document.body.appendChild(input);\n          input.select();\n          try {\n            if (document.execCommand('copy')) {\n              this.setState({\n                copied: true,\n                copyRecord: record,\n              })\n              setTimeout(() => {\n                this.setState({\n                  copied: false,\n                  copyRecord: ''\n                })\n              }, 2000);\n            } else {\n              console.error('传统方式复制失败');\n            }\n          } catch (error) {\n            console.error('传统方式复制出错:', error);\n          } finally {\n            document.body.removeChild(input);\n          }\n        }\n      };\n    } else {\n      navigator.clipboard.writeText(copyText)\n        .then(() => {\n          this.setState({\n            copied: true,\n            copyRecord: record,\n          })\n          setTimeout(() => {\n            this.setState({\n              copied: false,\n              copyRecord: ''\n            })\n          }, 2000);\n        })\n        .catch(err => {\n          console.error('复制失败:', err);\n        });\n    }\n  }\n\n  async onOpenChange(open, record) {\n    if (open) {\n      const res = await this.dataSourceMap.getTags.load({\n        clusterIds: record.id,\n      });\n      this.setState({\n        tags: res?.items?.[0]?.tags || [],\n        currentId: record?.id,\n        cluster: record,\n        open\n      })\n    } else {\n      if (this.state.tagVisible) {\n        this.setState({\n          currentId: null,\n          open\n        })\n      } else {\n        this.setState({\n          tags: [],\n          currentId: null,\n          cluster: null,\n          open\n        })\n      }\n    }\n  }\n\n  //打标签\n  onTagsChange(changedValues, allValues) {\n    const values = Object.values(allValues).map(({ key, value }) => ({ key, value }));\n    this.setState({ newTags: values })\n  }\n  onEditTagClick(event, record) {\n    this.setState({\n      tagVisible: true,\n      newTags: this.state.newTags.length == 0 ? [{ key: '', value: '' }] : this.state.newTags,\n    })\n  }\n  cancelEditTags() {\n    this.setState({\n      tagVisible: false,\n      tags: [],\n      newTags: [],\n      cluster: null\n    })\n  }\n  onAddTags(event) {\n    const { newTags } = this.state;\n    newTags.push({ key: '', value: '' })\n    this.setState({ newTags })\n    this.newTagsForm.setFieldsValue(newTags)\n  }\n  onDeleteTag(event, record, index) {\n    if (record?.id) {\n      this.utils.modal.confirm({\n        title: `${this.i18n('confirm')}`,\n        content: `${this.i18n('delete')} ${record.key}?`,\n        okButtonProps: {\n          danger: true,\n        },\n        onOk: async () => {\n          await this.dataSourceMap.deleteTags.load({ tagId: record.id });\n          const { items } = await this.dataSourceMap.getTags.load({ clusterIds: this.state.cluster.id });\n          this.setState({\n            tags: items?.[0]?.tags || []\n          }, this.getOrgTags)\n        }\n      })\n    } else {\n      const { newTags } = this.state;\n      newTags.splice(index, 1)\n      this.setState({ newTags })\n      this.newTagsForm.setFieldsValue(newTags)\n    }\n  }\n  async onSaveTags() {\n    const { newTags, cluster } = this.state;\n    const values = await this.$('newTagsForm').validateFields();\n    await this.dataSourceMap.createTag.load({\n      body: {\n        \"clusterId\": cluster?.id,\n        \"items\": newTags\n      }\n    });\n    this.utils.message.success(`${this.i18n('success')}`);\n    this.setState({\n      tagVisible: false,\n      newTags: [],\n      cluster: null\n    }, this.getOrgTags)\n  }\n\n  onChangeTag(value, selectedOptions) {\n    const tagKeys = selectedOptions.map(item => item[0].value);\n    const tagValues = selectedOptions.map(item => item[1].value);\n    this.setState({\n      currentTag: value,\n      tagKeys,\n      tagValues,\n      hasTag: value !== '' ? true : false,\n    }, () => {\n      this.init()\n    })\n  }\n\n  componentDidMount() {\n    this.getOrgTags();\n    this.init();\n  }\n\n\n}",
                "css": "",
                "state": {
                    "pageInit": {
                        "type": "JSExpression",
                        "value": "false"
                    },
                    "clustersLoading": {
                        "type": "JSExpression",
                        "value": "false"
                    },
                    "initialClusters": {
                        "type": "JSExpression",
                        "value": "[]"
                    },
                    "clusters": {
                        "type": "JSExpression",
                        "value": "[]"
                    },
                    "tags": {
                        "type": "JSExpression",
                        "value": "[]"
                    },
                    "newTags": {
                        "type": "JSExpression",
                        "value": "[]"
                    },
                    "cascadedData": {
                        "type": "JSExpression",
                        "value": "[]"
                    },
                    "currentTag": {
                        "type": "JSExpression",
                        "value": "''"
                    },
                    "tagKeys": {
                        "type": "JSExpression",
                        "value": "null"
                    },
                    "tagValues": {
                        "type": "JSExpression",
                        "value": "null"
                    },
                    "open": {
                        "type": "JSExpression",
                        "value": "false"
                    },
                    "currentId": {
                        "type": "JSExpression",
                        "value": "''"
                    },
                    "hasTag": {
                        "type": "JSExpression",
                        "value": "false"
                    },
                    "searchKey": {
                        "type": "JSExpression",
                        "value": "''"
                    },
                    "filterKeys": {
                        "type": "JSExpression",
                        "value": "[\"engine\", \"mode\", \"status\", \"orgName\"]"
                    }
                },
                "methods": {
                    "getMode": {
                        "type": "JSFunction",
                        "value": "function getMode(record) {\n  var _config$modes, _mode$title;\n  const config = this.utils[`cluster_definition_${record.engine}`];\n  const mode = config === null || config === void 0 || (_config$modes = config.modes) === null || _config$modes === void 0 ? void 0 : _config$modes.find(option => {\n    return option.name === (record === null || record === void 0 ? void 0 : record.mode);\n  });\n  return mode === null || mode === void 0 || (_mode$title = mode.title) === null || _mode$title === void 0 ? void 0 : _mode$title[this.utils.locale];\n}",
                        "source": "function getMode(record) {\n  const config = this.utils[`cluster_definition_${record.engine}`];\n  const mode = config?.modes?.find(option => {\n    return option.name === record?.mode;\n  });\n  return mode?.title?.[this.utils.locale];\n}"
                    },
                    "getOrgTags": {
                        "type": "JSFunction",
                        "value": "async function getOrgTags() {\n  const res = await this.dataSourceMap.listOrgTags.load();\n  const orgTags = (res === null || res === void 0 ? void 0 : res.items) || [];\n  const groupedData = _.groupBy(orgTags, 'key');\n  const cascadedData = (orgTags === null || orgTags === void 0 ? void 0 : orgTags.length) > 0 ? [{\n    value: 'key',\n    label: this.i18n('tag_key'),\n    disabled: true\n  }, ..._.map(groupedData, (values, key) => ({\n    value: key,\n    label: key,\n    children: [{\n      value: 'value',\n      label: this.i18n('tag_val'),\n      disabled: true\n    },\n    // {\n    //   value: '_all',\n    //   label: 'All'\n    // },\n    ..._.map(values, item => ({\n      value: item.value,\n      label: item.value\n    }))]\n  }))] : [];\n  this.setState({\n    cascadedData\n  });\n}",
                        "source": "async function getOrgTags() {\n  const res = await this.dataSourceMap.listOrgTags.load();\n  const orgTags = res?.items || [];\n  const groupedData = _.groupBy(orgTags, 'key');\n  const cascadedData = orgTags?.length > 0 ? [{\n    value: 'key',\n    label: this.i18n('tag_key'),\n    disabled: true\n  }, ..._.map(groupedData, (values, key) => ({\n    value: key,\n    label: key,\n    children: [{\n      value: 'value',\n      label: this.i18n('tag_val'),\n      disabled: true\n    },\n    // {\n    //   value: '_all',\n    //   label: 'All'\n    // },\n    ..._.map(values, item => ({\n      value: item.value,\n      label: item.value\n    }))]\n  }))] : [];\n  this.setState({\n    cascadedData\n  });\n}"
                    },
                    "getClustersFilterResult": {
                        "type": "JSFunction",
                        "value": "function getClustersFilterResult() {\n  var _this$state$clusters;\n  let data = (_this$state$clusters = this.state.clusters) === null || _this$state$clusters === void 0 || (_this$state$clusters = _this$state$clusters.filter(cluster => {\n    var _cluster$name;\n    // 搜索集群\n    return (_cluster$name = cluster.name) === null || _cluster$name === void 0 ? void 0 : _cluster$name.match(this.state.query.name);\n  })) === null || _this$state$clusters === void 0 || (_this$state$clusters = _this$state$clusters.filter(cluster => {\n    // 过滤引擎\n    return this.state.query.engine ? _.includes(this.state.query.engine, cluster.engine) : true;\n  })) === null || _this$state$clusters === void 0 ? void 0 : _this$state$clusters.filter(cluster => {\n    // 过滤状态\n    return this.state.query.status ? _.includes(this.state.query.status, cluster.status) : true;\n  });\n  if (this.state.query.columnKey && this.state.query.order) {\n    const orderType = this.state.query.order == 'ascend' ? 'asc' : 'desc';\n    data = _.orderBy(data, [this.state.query.columnKey], [orderType]);\n  }\n  return data;\n}",
                        "source": "function getClustersFilterResult() {\n  let data = this.state.clusters?.filter(cluster => {\n    // 搜索集群\n    return cluster.name?.match(this.state.query.name);\n  })?.filter(cluster => {\n    // 过滤引擎\n    return this.state.query.engine ? _.includes(this.state.query.engine, cluster.engine) : true;\n  })?.filter(cluster => {\n    // 过滤状态\n    return this.state.query.status ? _.includes(this.state.query.status, cluster.status) : true;\n  });\n  if (this.state.query.columnKey && this.state.query.order) {\n    const orderType = this.state.query.order == 'ascend' ? 'asc' : 'desc';\n    data = _.orderBy(data, [this.state.query.columnKey], [orderType]);\n  }\n  return data;\n}"
                    },
                    "init": {
                        "type": "JSFunction",
                        "value": "async function init() {\n  this.setState({\n    clustersLoading: true\n  });\n  const {\n    tagKeys,\n    tagValues\n  } = this.state;\n  const res = await this.dataSourceMap.listCluster.load({\n    tagKeys,\n    tagValues\n  });\n  // 通过url参数初始化过滤值\n  const query = _.pick(this.utils.params, ['engine', 'current', 'pageSize', 'columnKey', 'status', 'order', 'name'].concat(this.state.filterKeys));\n  query.engine = query.engine == '' ? null : query.engine;\n  query.status = query.status == '' ? null : query.status;\n  query.current = isNaN(parseInt(query.current)) ? 1 : parseInt(query.current);\n  query.pageSize = isNaN(parseInt(query.pageSize)) ? 20 : parseInt(query.pageSize);\n\n  // 设置filter下拉框的值\n  const clusterFilters = this.utils.getFilters((res === null || res === void 0 ? void 0 : res.items) || {}, this.state.filterKeys.map(key => ({\n    key\n  })));\n  this.setState({\n    clusters: _.orderBy((res === null || res === void 0 ? void 0 : res.items) || {}, ['createdAt'], ['desc']),\n    clusterFilters,\n    clustersLoading: false,\n    query,\n    pageInit: true,\n    searchKey: (query === null || query === void 0 ? void 0 : query.name) || ''\n  });\n}",
                        "source": "async function init() {\n  this.setState({\n    clustersLoading: true\n  });\n  const {\n    tagKeys,\n    tagValues\n  } = this.state;\n  const res = await this.dataSourceMap.listCluster.load({\n    tagKeys,\n    tagValues\n  });\n  // 通过url参数初始化过滤值\n  const query = _.pick(this.utils.params, ['engine', 'current', 'pageSize', 'columnKey', 'status', 'order', 'name'].concat(this.state.filterKeys));\n  query.engine = query.engine == '' ? null : query.engine;\n  query.status = query.status == '' ? null : query.status;\n  query.current = isNaN(parseInt(query.current)) ? 1 : parseInt(query.current);\n  query.pageSize = isNaN(parseInt(query.pageSize)) ? 20 : parseInt(query.pageSize);\n\n  // 设置filter下拉框的值\n  const clusterFilters = this.utils.getFilters(res?.items || {}, this.state.filterKeys.map(key => ({\n    key\n  })));\n  this.setState({\n    clusters: _.orderBy(res?.items || {}, ['createdAt'], ['desc']),\n    clusterFilters,\n    clustersLoading: false,\n    query,\n    pageInit: true,\n    searchKey: query?.name || ''\n  });\n}"
                    },
                    "onSearchCluster": {
                        "type": "JSFunction",
                        "value": "function onSearchCluster(event) {\n  const query = {\n    ...this.state.query,\n    current: 1,\n    name: event.target.value\n  };\n  this.setState({\n    query\n  });\n  this.history.replace(`${this.location.pathname}?${this.utils.qs.stringify(query)}`);\n}",
                        "source": "function onSearchCluster(event) {\n  const query = {\n    ...this.state.query,\n    current: 1,\n    name: event.target.value\n  };\n  this.setState({\n    query\n  });\n  this.history.replace(`${this.location.pathname}?${this.utils.qs.stringify(query)}`);\n}"
                    },
                    "onSearchChange": {
                        "type": "JSFunction",
                        "value": "function onSearchChange(event) {\n  this.setState({\n    searchKey: event.target.value\n  });\n}",
                        "source": "function onSearchChange(event) {\n  this.setState({\n    searchKey: event.target.value\n  });\n}"
                    },
                    "onTableDataChange": {
                        "type": "JSFunction",
                        "value": "function onTableDataChange(pagination, filters, sorter) {\n  // 分页数据变化\n  const {\n    current,\n    pageSize\n  } = pagination;\n  // 搜索数据变化\n  const filterQuery = {};\n  _.forEach(filters, (value, key) => {\n    // if (!_.isEmpty(value)) {\n    filterQuery[key] = value;\n    // }\n  });\n  // 排序数据变化\n  const {\n    order,\n    columnKey\n  } = sorter;\n  const orderQuery = {};\n  if (columnKey) {\n    Object.assign(orderQuery, {\n      order,\n      columnKey\n    });\n  }\n  const query = {\n    ...this.state.query,\n    current,\n    pageSize,\n    ...filterQuery,\n    ...orderQuery\n  };\n  this.history.replace(`${this.location.pathname}?${this.utils.qs.stringify(query)}`);\n  this.setState({\n    query\n  });\n}",
                        "source": "function onTableDataChange(pagination, filters, sorter) {\n  // 分页数据变化\n  const {\n    current,\n    pageSize\n  } = pagination;\n  // 搜索数据变化\n  const filterQuery = {};\n  _.forEach(filters, (value, key) => {\n    // if (!_.isEmpty(value)) {\n    filterQuery[key] = value;\n    // }\n  });\n  // 排序数据变化\n  const {\n    order,\n    columnKey\n  } = sorter;\n  const orderQuery = {};\n  if (columnKey) {\n    Object.assign(orderQuery, {\n      order,\n      columnKey\n    });\n  }\n  const query = {\n    ...this.state.query,\n    current,\n    pageSize,\n    ...filterQuery,\n    ...orderQuery\n  };\n  this.history.replace(`${this.location.pathname}?${this.utils.qs.stringify(query)}`);\n  this.setState({\n    query\n  });\n}"
                    },
                    "sorterCreatedAt": {
                        "type": "JSFunction",
                        "value": "function sorterCreatedAt(a, b) {\n  return new Date(a === null || a === void 0 ? void 0 : a.createdAt).getTime() - new Date(b === null || b === void 0 ? void 0 : b.createdAt).getTime();\n}",
                        "source": "function sorterCreatedAt(a, b) {\n  return new Date(a?.createdAt).getTime() - new Date(b?.createdAt).getTime();\n}"
                    },
                    "sorterName": {
                        "type": "JSFunction",
                        "value": "function sorterName(a, b) {\n  return a.name.localeCompare(b.name);\n}",
                        "source": "function sorterName(a, b) {\n  return a.name.localeCompare(b.name);\n}"
                    },
                    "onRecordClick": {
                        "type": "JSFunction",
                        "value": "async function onRecordClick(e, record) {\n  const cluster = await this.dataSourceMap.getCluster.load({\n    clusterName: record.name\n  });\n  if (this.utils.isDev()) return;\n  if (cluster) {\n    this.history.push(`/cluster/${cluster === null || cluster === void 0 ? void 0 : cluster.environmentType}/${record === null || record === void 0 ? void 0 : record.engine}/${record === null || record === void 0 ? void 0 : record.name}/overview`);\n  }\n}",
                        "source": "async function onRecordClick(e, record) {\n  const cluster = await this.dataSourceMap.getCluster.load({\n    clusterName: record.name\n  });\n  if (this.utils.isDev()) return;\n  if (cluster) {\n    this.history.push(`/cluster/${cluster?.environmentType}/${record?.engine}/${record?.name}/overview`);\n  }\n}"
                    },
                    "onCreateCluster": {
                        "type": "JSFunction",
                        "value": "function onCreateCluster() {\n  if (this.utils.isDev()) return;\n  const url = `/clusters/create`;\n  this.history.push(url);\n}",
                        "source": "function onCreateCluster() {\n  if (this.utils.isDev()) return;\n  const url = `/clusters/create`;\n  this.history.push(url);\n}"
                    },
                    "onDeleteCluster": {
                        "type": "JSFunction",
                        "value": "function onDeleteCluster(e, record) {\n  const canDelete = (record === null || record === void 0 ? void 0 : record.terminationPolicy) !== \"DoNotTerminate\" || record.status === \"Deleted\";\n  this.utils.modal.confirm({\n    title: `${this.i18n('confirm')}`,\n    content: canDelete ? `${this.i18n('delete')} ${record.name}?` : this.i18n(\"deleteProtect\"),\n    okButtonProps: {\n      disabled: !canDelete,\n      danger: true\n    },\n    onOk: async () => {\n      this.setState({\n        clustersLoading: true\n      });\n      const res = await this.dataSourceMap.deleteCluster.load({\n        clusterName: record.name\n      });\n      this.init();\n    }\n  });\n}",
                        "source": "function onDeleteCluster(e, record) {\n  const canDelete = record?.terminationPolicy !== \"DoNotTerminate\" || record.status === \"Deleted\";\n  this.utils.modal.confirm({\n    title: `${this.i18n('confirm')}`,\n    content: canDelete ? `${this.i18n('delete')} ${record.name}?` : this.i18n(\"deleteProtect\"),\n    okButtonProps: {\n      disabled: !canDelete,\n      danger: true\n    },\n    onOk: async () => {\n      this.setState({\n        clustersLoading: true\n      });\n      const res = await this.dataSourceMap.deleteCluster.load({\n        clusterName: record.name\n      });\n      this.init();\n    }\n  });\n}"
                    },
                    "onCopy": {
                        "type": "JSFunction",
                        "value": "function onCopy(event, record) {\n  const copyText = record === null || record === void 0 ? void 0 : record.name;\n  if (typeof navigator.clipboard === 'undefined' || typeof navigator.clipboard.writeText === 'undefined') {\n    navigator.clipboard = {\n      writeText: function copyTextToClipboard(copyText) {\n        const input = document.createElement('input');\n        input.setAttribute('value', copyText);\n        document.body.appendChild(input);\n        input.select();\n        try {\n          if (document.execCommand('copy')) {\n            this.setState({\n              copied: true,\n              copyRecord: record\n            });\n            setTimeout(() => {\n              this.setState({\n                copied: false,\n                copyRecord: ''\n              });\n            }, 2000);\n          } else {\n            console.error('传统方式复制失败');\n          }\n        } catch (error) {\n          console.error('传统方式复制出错:', error);\n        } finally {\n          document.body.removeChild(input);\n        }\n      }\n    };\n  } else {\n    navigator.clipboard.writeText(copyText).then(() => {\n      this.setState({\n        copied: true,\n        copyRecord: record\n      });\n      setTimeout(() => {\n        this.setState({\n          copied: false,\n          copyRecord: ''\n        });\n      }, 2000);\n    }).catch(err => {\n      console.error('复制失败:', err);\n    });\n  }\n}",
                        "source": "function onCopy(event, record) {\n  const copyText = record?.name;\n  if (typeof navigator.clipboard === 'undefined' || typeof navigator.clipboard.writeText === 'undefined') {\n    navigator.clipboard = {\n      writeText: function copyTextToClipboard(copyText) {\n        const input = document.createElement('input');\n        input.setAttribute('value', copyText);\n        document.body.appendChild(input);\n        input.select();\n        try {\n          if (document.execCommand('copy')) {\n            this.setState({\n              copied: true,\n              copyRecord: record\n            });\n            setTimeout(() => {\n              this.setState({\n                copied: false,\n                copyRecord: ''\n              });\n            }, 2000);\n          } else {\n            console.error('传统方式复制失败');\n          }\n        } catch (error) {\n          console.error('传统方式复制出错:', error);\n        } finally {\n          document.body.removeChild(input);\n        }\n      }\n    };\n  } else {\n    navigator.clipboard.writeText(copyText).then(() => {\n      this.setState({\n        copied: true,\n        copyRecord: record\n      });\n      setTimeout(() => {\n        this.setState({\n          copied: false,\n          copyRecord: ''\n        });\n      }, 2000);\n    }).catch(err => {\n      console.error('复制失败:', err);\n    });\n  }\n}"
                    },
                    "onOpenChange": {
                        "type": "JSFunction",
                        "value": "async function onOpenChange(open, record) {\n  if (open) {\n    var _res$items;\n    const res = await this.dataSourceMap.getTags.load({\n      clusterIds: record.id\n    });\n    this.setState({\n      tags: (res === null || res === void 0 || (_res$items = res.items) === null || _res$items === void 0 || (_res$items = _res$items[0]) === null || _res$items === void 0 ? void 0 : _res$items.tags) || [],\n      currentId: record === null || record === void 0 ? void 0 : record.id,\n      cluster: record,\n      open\n    });\n  } else {\n    if (this.state.tagVisible) {\n      this.setState({\n        currentId: null,\n        open\n      });\n    } else {\n      this.setState({\n        tags: [],\n        currentId: null,\n        cluster: null,\n        open\n      });\n    }\n  }\n}",
                        "source": "async function onOpenChange(open, record) {\n  if (open) {\n    const res = await this.dataSourceMap.getTags.load({\n      clusterIds: record.id\n    });\n    this.setState({\n      tags: res?.items?.[0]?.tags || [],\n      currentId: record?.id,\n      cluster: record,\n      open\n    });\n  } else {\n    if (this.state.tagVisible) {\n      this.setState({\n        currentId: null,\n        open\n      });\n    } else {\n      this.setState({\n        tags: [],\n        currentId: null,\n        cluster: null,\n        open\n      });\n    }\n  }\n}"
                    },
                    "onTagsChange": {
                        "type": "JSFunction",
                        "value": "function onTagsChange(changedValues, allValues) {\n  const values = Object.values(allValues).map(({\n    key,\n    value\n  }) => ({\n    key,\n    value\n  }));\n  this.setState({\n    newTags: values\n  });\n}",
                        "source": "function onTagsChange(changedValues, allValues) {\n  const values = Object.values(allValues).map(({\n    key,\n    value\n  }) => ({\n    key,\n    value\n  }));\n  this.setState({\n    newTags: values\n  });\n}"
                    },
                    "onEditTagClick": {
                        "type": "JSFunction",
                        "value": "function onEditTagClick(event, record) {\n  this.setState({\n    tagVisible: true,\n    newTags: this.state.newTags.length == 0 ? [{\n      key: '',\n      value: ''\n    }] : this.state.newTags\n  });\n}",
                        "source": "function onEditTagClick(event, record) {\n  this.setState({\n    tagVisible: true,\n    newTags: this.state.newTags.length == 0 ? [{\n      key: '',\n      value: ''\n    }] : this.state.newTags\n  });\n}"
                    },
                    "cancelEditTags": {
                        "type": "JSFunction",
                        "value": "function cancelEditTags() {\n  this.setState({\n    tagVisible: false,\n    tags: [],\n    newTags: [],\n    cluster: null\n  });\n}",
                        "source": "function cancelEditTags() {\n  this.setState({\n    tagVisible: false,\n    tags: [],\n    newTags: [],\n    cluster: null\n  });\n}"
                    },
                    "onAddTags": {
                        "type": "JSFunction",
                        "value": "function onAddTags(event) {\n  const {\n    newTags\n  } = this.state;\n  newTags.push({\n    key: '',\n    value: ''\n  });\n  this.setState({\n    newTags\n  });\n  this.newTagsForm.setFieldsValue(newTags);\n}",
                        "source": "function onAddTags(event) {\n  const {\n    newTags\n  } = this.state;\n  newTags.push({\n    key: '',\n    value: ''\n  });\n  this.setState({\n    newTags\n  });\n  this.newTagsForm.setFieldsValue(newTags);\n}"
                    },
                    "onDeleteTag": {
                        "type": "JSFunction",
                        "value": "function onDeleteTag(event, record, index) {\n  if (record !== null && record !== void 0 && record.id) {\n    this.utils.modal.confirm({\n      title: `${this.i18n('confirm')}`,\n      content: `${this.i18n('delete')} ${record.key}?`,\n      okButtonProps: {\n        danger: true\n      },\n      onOk: async () => {\n        var _items$;\n        await this.dataSourceMap.deleteTags.load({\n          tagId: record.id\n        });\n        const {\n          items\n        } = await this.dataSourceMap.getTags.load({\n          clusterIds: this.state.cluster.id\n        });\n        this.setState({\n          tags: (items === null || items === void 0 || (_items$ = items[0]) === null || _items$ === void 0 ? void 0 : _items$.tags) || []\n        }, this.getOrgTags);\n      }\n    });\n  } else {\n    const {\n      newTags\n    } = this.state;\n    newTags.splice(index, 1);\n    this.setState({\n      newTags\n    });\n    this.newTagsForm.setFieldsValue(newTags);\n  }\n}",
                        "source": "function onDeleteTag(event, record, index) {\n  if (record?.id) {\n    this.utils.modal.confirm({\n      title: `${this.i18n('confirm')}`,\n      content: `${this.i18n('delete')} ${record.key}?`,\n      okButtonProps: {\n        danger: true\n      },\n      onOk: async () => {\n        await this.dataSourceMap.deleteTags.load({\n          tagId: record.id\n        });\n        const {\n          items\n        } = await this.dataSourceMap.getTags.load({\n          clusterIds: this.state.cluster.id\n        });\n        this.setState({\n          tags: items?.[0]?.tags || []\n        }, this.getOrgTags);\n      }\n    });\n  } else {\n    const {\n      newTags\n    } = this.state;\n    newTags.splice(index, 1);\n    this.setState({\n      newTags\n    });\n    this.newTagsForm.setFieldsValue(newTags);\n  }\n}"
                    },
                    "onSaveTags": {
                        "type": "JSFunction",
                        "value": "async function onSaveTags() {\n  const {\n    newTags,\n    cluster\n  } = this.state;\n  const values = await this.$('newTagsForm').validateFields();\n  await this.dataSourceMap.createTag.load({\n    body: {\n      \"clusterId\": cluster === null || cluster === void 0 ? void 0 : cluster.id,\n      \"items\": newTags\n    }\n  });\n  this.utils.message.success(`${this.i18n('success')}`);\n  this.setState({\n    tagVisible: false,\n    newTags: [],\n    cluster: null\n  }, this.getOrgTags);\n}",
                        "source": "async function onSaveTags() {\n  const {\n    newTags,\n    cluster\n  } = this.state;\n  const values = await this.$('newTagsForm').validateFields();\n  await this.dataSourceMap.createTag.load({\n    body: {\n      \"clusterId\": cluster?.id,\n      \"items\": newTags\n    }\n  });\n  this.utils.message.success(`${this.i18n('success')}`);\n  this.setState({\n    tagVisible: false,\n    newTags: [],\n    cluster: null\n  }, this.getOrgTags);\n}"
                    },
                    "onChangeTag": {
                        "type": "JSFunction",
                        "value": "function onChangeTag(value, selectedOptions) {\n  const tagKeys = selectedOptions.map(item => item[0].value);\n  const tagValues = selectedOptions.map(item => item[1].value);\n  this.setState({\n    currentTag: value,\n    tagKeys,\n    tagValues,\n    hasTag: value !== '' ? true : false\n  }, () => {\n    this.init();\n  });\n}",
                        "source": "function onChangeTag(value, selectedOptions) {\n  const tagKeys = selectedOptions.map(item => item[0].value);\n  const tagValues = selectedOptions.map(item => item[1].value);\n  this.setState({\n    currentTag: value,\n    tagKeys,\n    tagValues,\n    hasTag: value !== '' ? true : false\n  }, () => {\n    this.init();\n  });\n}"
                    }
                },
                "lifeCycles": {
                    "componentDidMount": {
                        "type": "JSFunction",
                        "value": "function componentDidMount() {\n  this.getOrgTags();\n  this.init();\n}",
                        "source": "function componentDidMount() {\n  this.getOrgTags();\n  this.init();\n}"
                    }
                },
                "children": [
                    {
                        "componentName": "Box",
                        "id": "node_oclty787j61",
                        "props": {
                            "id": "box-5bdb9da2f1bd",
                            "padding": "",
                            "margin": "",
                            "twinkle": false,
                            "bordered": false,
                            "hoverable": false,
                            "loading": false,
                            "style": {
                                "display": "block"
                            },
                            "ref": "box-55518176",
                            "_unsafe_MixedSetter____condition____select": "VariableSetter"
                        },
                        "title": "",
                        "isLocked": false,
                        "condition": {
                            "type": "JSExpression",
                            "value": "this.utils.hasPermission(\"cluster.read\")"
                        },
                        "conditionGroup": "",
                        "loopArgs": [
                            "",
                            ""
                        ],
                        "children": [
                            {
                                "componentName": "Box",
                                "id": "node_oclmixk34h19",
                                "props": {
                                    "id": "box-c239c0878e19",
                                    "padding": "",
                                    "margin": "",
                                    "twinkle": false,
                                    "loading": false,
                                    "style": {
                                        "display": "block"
                                    },
                                    "ref": "box-33ab7abc",
                                    "_unsafe_MixedSetter____condition____select": "VariableSetter",
                                    "bordered": false,
                                    "hoverable": false
                                },
                                "title": "Cluster数据已加载",
                                "isLocked": false,
                                "condition": {
                                    "type": "JSExpression",
                                    "value": "this.state.pageInit"
                                },
                                "conditionGroup": "",
                                "loopArgs": [
                                    "",
                                    ""
                                ],
                                "children": [
                                    {
                                        "componentName": "Space",
                                        "id": "node_oclm8i6s081",
                                        "props": {
                                            "align": "start",
                                            "direction": "horizontal",
                                            "wrap": false,
                                            "style": {
                                                "display": "flex",
                                                "justifyContent": "space-between",
                                                "marginBottom": "24px",
                                                "alignItems": "center"
                                            },
                                            "ref": "space-134bc6d3",
                                            "_unsafe_MixedSetter____condition____select": "VariableSetter"
                                        },
                                        "title": "",
                                        "isLocked": false,
                                        "condition": {
                                            "type": "JSExpression",
                                            "value": "this.state.clusters.length || this.state.hasTag"
                                        },
                                        "conditionGroup": "",
                                        "loopArgs": [
                                            "",
                                            ""
                                        ],
                                        "children": [
                                            {
                                                "componentName": "Space",
                                                "id": "node_oclm8i6s082",
                                                "props": {
                                                    "align": "start",
                                                    "direction": "horizontal",
                                                    "wrap": false,
                                                    "ref": "space-475f9431"
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": true,
                                                "conditionGroup": "",
                                                "loopArgs": [
                                                    "",
                                                    ""
                                                ],
                                                "children": [
                                                    {
                                                        "componentName": "Input",
                                                        "id": "node_oclr7krra32",
                                                        "props": {
                                                            "placeholder": {
                                                                "type": "JSExpression",
                                                                "value": "this.i18n('search')",
                                                                "mock": "Search"
                                                            },
                                                            "allowClear": true,
                                                            "bordered": true,
                                                            "disabled": false,
                                                            "size": "middle",
                                                            "addonAfter": "",
                                                            "prefix": {
                                                                "type": "JSSlot",
                                                                "value": [
                                                                    {
                                                                        "componentName": "Icon",
                                                                        "id": "node_oclr7krra35",
                                                                        "props": {
                                                                            "type": "SearchOutlined",
                                                                            "size": 18,
                                                                            "rotate": 0,
                                                                            "spin": false,
                                                                            "color": "",
                                                                            "style": {
                                                                                "paddingRight": "10px",
                                                                                "opacity": 0.4
                                                                            }
                                                                        },
                                                                        "title": "",
                                                                        "isLocked": false,
                                                                        "condition": true,
                                                                        "conditionGroup": ""
                                                                    }
                                                                ],
                                                                "id": "node_oclr7krra33"
                                                            },
                                                            "suffix": "",
                                                            "_unsafe_MixedSetter_prefix_select": "SlotSetter",
                                                            "style": {
                                                                "width": "200px"
                                                            },
                                                            "__events": {
                                                                "eventDataList": [
                                                                    {
                                                                        "type": "componentEvent",
                                                                        "name": "onChange",
                                                                        "relatedEventName": "onSearchChange"
                                                                    },
                                                                    {
                                                                        "type": "componentEvent",
                                                                        "name": "onPressEnter",
                                                                        "relatedEventName": "onSearchCluster"
                                                                    }
                                                                ],
                                                                "eventList": [
                                                                    {
                                                                        "name": "onChange",
                                                                        "template": "onChange(event,${extParams}){\n// 输入框内容变化时的回调\nconsole.log('onChange',event);}",
                                                                        "disabled": true
                                                                    },
                                                                    {
                                                                        "name": "onPressEnter",
                                                                        "template": "onPressEnter(event,${extParams}){\n// 按下回车的回调\nconsole.log('onPressEnter',event);}",
                                                                        "disabled": true
                                                                    },
                                                                    {
                                                                        "name": "onFocus",
                                                                        "template": "onFocus(event,${extParams}){\n// 获取焦点回调\nconsole.log('onFocus',event);}",
                                                                        "disabled": false
                                                                    },
                                                                    {
                                                                        "name": "onKeyDown",
                                                                        "template": "onKeyDown(event,${extParams}){\n// 按键按下时的回调\nconsole.log('onKeyDown',event);}",
                                                                        "disabled": false
                                                                    },
                                                                    {
                                                                        "name": "onKeyPress",
                                                                        "template": "onKeyPress(event,${extParams}){\n// 按键按下后的回调\nconsole.log('onKeyPress',event);}",
                                                                        "disabled": false
                                                                    },
                                                                    {
                                                                        "name": "onKeyUp",
                                                                        "template": "onKeyUp(event,${extParams}){\n// 按键释放回调\nconsole.log('onKeyUp',event);}",
                                                                        "disabled": false
                                                                    },
                                                                    {
                                                                        "name": "onBlur",
                                                                        "template": "onBlur(event,${extParams}){\n// 按键释放回调\nconsole.log('onBlur',event);}",
                                                                        "disabled": false
                                                                    }
                                                                ]
                                                            },
                                                            "onChange": {
                                                                "type": "JSFunction",
                                                                "value": "function(){return this.onSearchChange.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                                                            },
                                                            "ref": "input-3ba2be6d",
                                                            "value": {
                                                                "type": "JSExpression",
                                                                "value": "this.state.searchKey"
                                                            },
                                                            "onPressEnter": {
                                                                "type": "JSFunction",
                                                                "value": "function(){return this.onSearchCluster.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                                                            }
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": "",
                                                        "loopArgs": [
                                                            "",
                                                            ""
                                                        ]
                                                    },
                                                    {
                                                        "componentName": "ApeCascader",
                                                        "id": "node_oclx9vai391",
                                                        "props": {
                                                            "options": {
                                                                "type": "JSExpression",
                                                                "value": "this.state.cascadedData",
                                                                "mock": [
                                                                    {
                                                                        "value": "zhejiang",
                                                                        "label": "Zhejiang",
                                                                        "children": [
                                                                            {
                                                                                "value": "hangzhou",
                                                                                "label": "Hangzhou",
                                                                                "children": [
                                                                                    {
                                                                                        "value": "xihu",
                                                                                        "label": "West Lake"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    {
                                                                        "value": "jiangsu",
                                                                        "label": "Jiangsu",
                                                                        "children": [
                                                                            {
                                                                                "value": "nanjing",
                                                                                "label": "Nanjing",
                                                                                "children": [
                                                                                    {
                                                                                        "value": "zhonghuamen",
                                                                                        "label": "Zhong Hua Men"
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "placeholder": {
                                                                "type": "JSExpression",
                                                                "value": "this.i18n('select_tag')",
                                                                "mock": "请选择"
                                                            },
                                                            "defaultValue": [],
                                                            "value": {
                                                                "type": "JSExpression",
                                                                "value": "this.state.currentTag"
                                                            },
                                                            "showCheckedStrategy": "child",
                                                            "allowClear": true,
                                                            "autoFocus": false,
                                                            "bordered": true,
                                                            "changeOnSelect": false,
                                                            "disabled": false,
                                                            "expandTrigger": "click",
                                                            "placement": "bottomLeft",
                                                            "showSearch": true,
                                                            "multiple": true,
                                                            "__events": {
                                                                "eventDataList": [
                                                                    {
                                                                        "type": "componentEvent",
                                                                        "name": "onChange",
                                                                        "relatedEventName": "onChangeTag"
                                                                    }
                                                                ],
                                                                "eventList": [
                                                                    {
                                                                        "name": "onChange",
                                                                        "template": "onChange(value,selectedOptions,${extParams}){\n// 选择完成后的回调\nconsole.log('onChange', value, selectedOptions);}",
                                                                        "disabled": true
                                                                    },
                                                                    {
                                                                        "name": "onPopupVisibleChange",
                                                                        "template": "onPopupVisibleChange(value,selectedOptions,${extParams}){\n// 显示/隐藏浮层的回调\nconsole.log('onPopupVisibleChange', value, selectedOptions);}",
                                                                        "disabled": false
                                                                    }
                                                                ]
                                                            },
                                                            "onChange": {
                                                                "type": "JSFunction",
                                                                "value": "function(){return this.onChangeTag.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                                                            },
                                                            "_unsafe_MixedSetter_value_select": "ExpressionSetter",
                                                            "notFoundContent": {
                                                                "type": "JSExpression",
                                                                "value": "this.i18n('noData')",
                                                                "mock": ""
                                                            },
                                                            "ref": "apecascader-b3f3e1ce"
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": "",
                                                        "loopArgs": [
                                                            "",
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "componentName": "Space",
                                                "id": "node_oclm8i6s088",
                                                "props": {
                                                    "align": "start",
                                                    "direction": "horizontal",
                                                    "style": {
                                                        "display": "flex",
                                                        "justifyContent": "flex-end",
                                                        "alignItems": "center"
                                                    },
                                                    "wrap": false
                                                },
                                                "condition": true,
                                                "conditionGroup": "",
                                                "isLocked": false,
                                                "title": "",
                                                "children": [
                                                    {
                                                        "componentName": "Tooltip",
                                                        "id": "node_oclxbenvx83",
                                                        "props": {
                                                            "title": {
                                                                "type": "JSExpression",
                                                                "value": "this.i18n('nopermission')"
                                                            },
                                                            "defaultOpen": false,
                                                            "autoAdjustOverflow": true,
                                                            "arrowPointAtCenter": false,
                                                            "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                            "ref": "tooltip-8454663a",
                                                            "_unsafe_MixedSetter____condition____select": "BoolSetter",
                                                            "trigger": "hover",
                                                            "mouseEnterDelay": {
                                                                "type": "JSExpression",
                                                                "value": "!this.utils.hasPermission(\"cluster.write\")? 0 : 1*60*60"
                                                            }
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": "",
                                                        "loopArgs": [
                                                            "",
                                                            ""
                                                        ],
                                                        "children": [
                                                            {
                                                                "componentName": "Button",
                                                                "id": "node_oclxbenvx84",
                                                                "props": {
                                                                    "__events": {
                                                                        "eventDataList": [
                                                                            {
                                                                                "type": "componentEvent",
                                                                                "name": "onClick",
                                                                                "relatedEventName": "onCreateCluster"
                                                                            }
                                                                        ],
                                                                        "eventList": [
                                                                            {
                                                                                "name": "onClick",
                                                                                "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                                                                                "disabled": true
                                                                            }
                                                                        ]
                                                                    },
                                                                    "block": false,
                                                                    "children": {
                                                                        "type": "JSExpression",
                                                                        "value": "this.i18n('create')"
                                                                    },
                                                                    "danger": false,
                                                                    "disabled": {
                                                                        "type": "JSExpression",
                                                                        "value": "!this.utils.hasPermission(\"cluster.write\")",
                                                                        "mock": false
                                                                    },
                                                                    "ghost": false,
                                                                    "htmlType": "button",
                                                                    "icon": "",
                                                                    "ref": "button-60pps90",
                                                                    "shape": "default",
                                                                    "size": "middle",
                                                                    "type": "primary",
                                                                    "_unsafe_MixedSetter_children_select": "VariableSetter",
                                                                    "onClick": {
                                                                        "type": "JSFunction",
                                                                        "value": "function(){return this.onCreateCluster.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                                                                    },
                                                                    "_unsafe_MixedSetter____condition____select": "BoolSetter"
                                                                },
                                                                "condition": true,
                                                                "conditionGroup": "",
                                                                "isLocked": false,
                                                                "title": "",
                                                                "loopArgs": [
                                                                    "",
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    {
                                                        "componentName": "Button",
                                                        "id": "node_ocltgturvk1",
                                                        "props": {
                                                            "type": "text",
                                                            "children": "",
                                                            "htmlType": "button",
                                                            "size": "middle",
                                                            "shape": "default",
                                                            "icon": {
                                                                "type": "JSSlot",
                                                                "value": [
                                                                    {
                                                                        "componentName": "Icon",
                                                                        "id": "node_ocltgturvk3",
                                                                        "props": {
                                                                            "type": "ReloadOutlined",
                                                                            "size": 16,
                                                                            "rotate": 0,
                                                                            "spin": false
                                                                        },
                                                                        "title": "",
                                                                        "isLocked": false,
                                                                        "condition": true,
                                                                        "conditionGroup": ""
                                                                    }
                                                                ],
                                                                "id": "node_ocltgturvk2"
                                                            },
                                                            "block": false,
                                                            "danger": false,
                                                            "ghost": false,
                                                            "disabled": false,
                                                            "loading": {
                                                                "type": "JSExpression",
                                                                "value": "this.state.clustersLoading"
                                                            },
                                                            "__events": {
                                                                "eventDataList": [
                                                                    {
                                                                        "type": "componentEvent",
                                                                        "name": "onClick",
                                                                        "relatedEventName": "init"
                                                                    }
                                                                ],
                                                                "eventList": [
                                                                    {
                                                                        "name": "onClick",
                                                                        "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                                                                        "disabled": true
                                                                    }
                                                                ]
                                                            },
                                                            "onClick": {
                                                                "type": "JSFunction",
                                                                "value": "function(){return this.init.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                                                            },
                                                            "ref": "button-142f82cc"
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": "",
                                                        "loopArgs": [
                                                            "",
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "componentName": "Box",
                                        "id": "node_oclmjd5bkyw",
                                        "props": {
                                            "id": "box-97464b0fbde4",
                                            "padding": "",
                                            "margin": "",
                                            "twinkle": false,
                                            "loading": false,
                                            "ref": "box-f85fa4ea",
                                            "_unsafe_MixedSetter____condition____select": "VariableSetter",
                                            "style": {
                                                "display": "block",
                                                "borderRadius": "16px"
                                            },
                                            "bordered": false,
                                            "hoverable": false
                                        },
                                        "title": "无集群",
                                        "isLocked": false,
                                        "condition": {
                                            "type": "JSExpression",
                                            "value": "!this.state.clusters.length && !this.state.hasTag"
                                        },
                                        "conditionGroup": "",
                                        "loopArgs": [
                                            "",
                                            ""
                                        ],
                                        "children": [
                                            {
                                                "componentName": "Card",
                                                "id": "node_oclmjd5bkyx",
                                                "props": {
                                                    "title": "",
                                                    "bordered": true,
                                                    "hoverable": false,
                                                    "loading": false,
                                                    "size": "default",
                                                    "type": "default",
                                                    "style": {
                                                        "textAlign": "center",
                                                        "borderRadius": "12px",
                                                        "paddingTop": "100px",
                                                        "paddingBottom": "160px"
                                                    },
                                                    "ref": "card-92da7b1b"
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": true,
                                                "conditionGroup": "",
                                                "loopArgs": [
                                                    "",
                                                    ""
                                                ],
                                                "children": [
                                                    {
                                                        "componentName": "Illustration",
                                                        "id": "node_oclrzqacli1",
                                                        "props": {
                                                            "defaultCountry": "cn",
                                                            "type": "template",
                                                            "style": {
                                                                "width": "180px",
                                                                "height": "140px"
                                                            }
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": ""
                                                    },
                                                    {
                                                        "componentName": "Typography.Title",
                                                        "id": "node_oclmjd5hifk",
                                                        "props": {
                                                            "level": 4,
                                                            "children": {
                                                                "type": "JSExpression",
                                                                "value": "this.i18n(\"welcome\")",
                                                                "mock": "欢迎使用Kubeblocks Cloud"
                                                            },
                                                            "code": false,
                                                            "copyable": false,
                                                            "delete": false,
                                                            "disabled": false,
                                                            "editable": false,
                                                            "ellipsis": false,
                                                            "mark": false,
                                                            "keyboard": false,
                                                            "underline": false,
                                                            "strong": false,
                                                            "style": {
                                                                "marginTop": "30px",
                                                                "marginBottom": "20px"
                                                            }
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": ""
                                                    },
                                                    {
                                                        "componentName": "Typography.Paragraph",
                                                        "id": "node_oclmjd5hifm",
                                                        "props": {
                                                            "ellipsis": true,
                                                            "children": {
                                                                "type": "JSExpression",
                                                                "value": "this.i18n(\"welcome_info\")",
                                                                "mock": "您目前还没有任何集群，创建您的第一个集群。"
                                                            },
                                                            "code": false,
                                                            "copyable": false,
                                                            "delete": false,
                                                            "disabled": false,
                                                            "editable": false,
                                                            "mark": false,
                                                            "underline": false,
                                                            "strong": false,
                                                            "type": "secondary",
                                                            "style": {
                                                                "marginBottom": "32px"
                                                            }
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": ""
                                                    },
                                                    {
                                                        "componentName": "Tooltip",
                                                        "id": "node_oclxbenvx81",
                                                        "props": {
                                                            "title": {
                                                                "type": "JSExpression",
                                                                "value": "this.i18n('nopermission')"
                                                            },
                                                            "defaultOpen": false,
                                                            "autoAdjustOverflow": true,
                                                            "arrowPointAtCenter": false,
                                                            "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                            "ref": "tooltip-8454663a",
                                                            "_unsafe_MixedSetter____condition____select": "BoolSetter",
                                                            "trigger": "hover",
                                                            "mouseEnterDelay": {
                                                                "type": "JSExpression",
                                                                "value": "!this.utils.hasPermission(\"cluster.write\")? 0 : 1*60*60"
                                                            }
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": "",
                                                        "loopArgs": [
                                                            "",
                                                            ""
                                                        ],
                                                        "children": [
                                                            {
                                                                "componentName": "Button",
                                                                "id": "node_oclxbenvx82",
                                                                "props": {
                                                                    "__events": {
                                                                        "eventDataList": [
                                                                            {
                                                                                "type": "componentEvent",
                                                                                "name": "onClick",
                                                                                "relatedEventName": "onCreateCluster"
                                                                            }
                                                                        ],
                                                                        "eventList": [
                                                                            {
                                                                                "name": "onClick",
                                                                                "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                                                                                "disabled": true
                                                                            }
                                                                        ]
                                                                    },
                                                                    "block": false,
                                                                    "children": {
                                                                        "type": "JSExpression",
                                                                        "value": "this.i18n('create')"
                                                                    },
                                                                    "danger": false,
                                                                    "disabled": {
                                                                        "type": "JSExpression",
                                                                        "value": "!this.utils.hasPermission(\"cluster.write\")",
                                                                        "mock": false
                                                                    },
                                                                    "ghost": false,
                                                                    "htmlType": "button",
                                                                    "icon": "",
                                                                    "ref": "button-60pps90",
                                                                    "shape": "default",
                                                                    "size": "middle",
                                                                    "type": "primary",
                                                                    "_unsafe_MixedSetter_children_select": "VariableSetter",
                                                                    "onClick": {
                                                                        "type": "JSFunction",
                                                                        "value": "function(){return this.onCreateCluster.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                                                                    },
                                                                    "_unsafe_MixedSetter____condition____select": "BoolSetter"
                                                                },
                                                                "condition": true,
                                                                "conditionGroup": "",
                                                                "isLocked": false,
                                                                "title": "",
                                                                "loopArgs": [
                                                                    "",
                                                                    ""
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    },
                                    {
                                        "componentName": "Table",
                                        "id": "node_oclm8i74vk6",
                                        "props": {
                                            "__events": {
                                                "eventDataList": [
                                                    {
                                                        "type": "componentEvent",
                                                        "name": "onChange",
                                                        "relatedEventName": "onTableDataChange"
                                                    }
                                                ],
                                                "eventList": [
                                                    {
                                                        "name": "onChange",
                                                        "disabled": true
                                                    },
                                                    {
                                                        "name": "rowSelection.onChange",
                                                        "disabled": false
                                                    },
                                                    {
                                                        "name": "expandable.onExpand",
                                                        "disabled": false
                                                    },
                                                    {
                                                        "name": "expandable.onExpandedRowsChange",
                                                        "disabled": false
                                                    }
                                                ]
                                            },
                                            "_unsafe_MixedSetter____condition____select": "VariableSetter",
                                            "columns": [
                                                {
                                                    "_unsafe_MixedSetter_sorter_select": "FunctionSetter",
                                                    "align": "left",
                                                    "dataIndex": "name",
                                                    "fixed": "",
                                                    "key": "name",
                                                    "render": {
                                                        "type": "JSSlot",
                                                        "params": [
                                                            "text",
                                                            "record",
                                                            "index"
                                                        ],
                                                        "value": [
                                                            {
                                                                "componentName": "Space",
                                                                "id": "node_oclm8i74vkp",
                                                                "props": {
                                                                    "align": "start",
                                                                    "direction": "horizontal",
                                                                    "size": "small",
                                                                    "style": {
                                                                        "alignItems": "center",
                                                                        "display": "flex"
                                                                    },
                                                                    "wrap": false,
                                                                    "ref": "space-98c534c3"
                                                                },
                                                                "condition": true,
                                                                "conditionGroup": "",
                                                                "isLocked": false,
                                                                "title": "",
                                                                "children": [
                                                                    {
                                                                        "componentName": "Icon",
                                                                        "id": "node_oclsravr4k1",
                                                                        "props": {
                                                                            "type": {
                                                                                "type": "JSExpression",
                                                                                "value": "`icon-${this.record?.engine}`",
                                                                                "mock": "SmileOutlined"
                                                                            },
                                                                            "size": 40,
                                                                            "rotate": 0,
                                                                            "spin": false
                                                                        },
                                                                        "title": "",
                                                                        "isLocked": false,
                                                                        "condition": true,
                                                                        "conditionGroup": ""
                                                                    },
                                                                    {
                                                                        "componentName": "Space",
                                                                        "id": "node_oclm8i74vkr",
                                                                        "props": {
                                                                            "align": "start",
                                                                            "direction": "vertical",
                                                                            "size": "small",
                                                                            "wrap": false,
                                                                            "ref": "space-2aceaae8"
                                                                        },
                                                                        "condition": true,
                                                                        "conditionGroup": "",
                                                                        "isLocked": false,
                                                                        "title": "",
                                                                        "children": [
                                                                            {
                                                                                "componentName": "Space",
                                                                                "id": "node_oclw7840ca1",
                                                                                "props": {
                                                                                    "align": "start",
                                                                                    "direction": "horizontal",
                                                                                    "wrap": false,
                                                                                    "size": 0,
                                                                                    "style": {
                                                                                        "display": "flex",
                                                                                        "alignItems": "center"
                                                                                    },
                                                                                    "ref": "space-dc10b04b",
                                                                                    "_unsafe_MixedSetter_size_select": "NumberSetter"
                                                                                },
                                                                                "title": "",
                                                                                "isLocked": false,
                                                                                "condition": true,
                                                                                "conditionGroup": "",
                                                                                "loopArgs": [
                                                                                    "",
                                                                                    ""
                                                                                ],
                                                                                "children": [
                                                                                    {
                                                                                        "componentName": "Button",
                                                                                        "id": "node_oclm8i74vks",
                                                                                        "props": {
                                                                                            "__events": {
                                                                                                "eventDataList": [
                                                                                                    {
                                                                                                        "name": "onClick",
                                                                                                        "paramStr": "this.record\n",
                                                                                                        "relatedEventName": "onRecordClick",
                                                                                                        "type": "componentEvent"
                                                                                                    }
                                                                                                ],
                                                                                                "eventList": [
                                                                                                    {
                                                                                                        "name": "onClick",
                                                                                                        "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                                                                                                        "disabled": true
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "_unsafe_MixedSetter_children_select": "VariableSetter",
                                                                                            "block": false,
                                                                                            "children": {
                                                                                                "type": "JSExpression",
                                                                                                "value": "this.record?.name",
                                                                                                "mock": "链接按钮"
                                                                                            },
                                                                                            "danger": false,
                                                                                            "disabled": false,
                                                                                            "ghost": false,
                                                                                            "htmlType": "button",
                                                                                            "icon": "",
                                                                                            "onClick": {
                                                                                                "type": "JSFunction",
                                                                                                "value": "function(){return this.onRecordClick.apply(this,Array.prototype.slice.call(arguments).concat([this.record\n])) }"
                                                                                            },
                                                                                            "ref": "button-b16cfe92",
                                                                                            "shape": "default",
                                                                                            "size": "small",
                                                                                            "style": {
                                                                                                "fontSize": "14px",
                                                                                                "fontWeight": 500
                                                                                            },
                                                                                            "type": "link"
                                                                                        },
                                                                                        "condition": true,
                                                                                        "conditionGroup": "",
                                                                                        "isLocked": false,
                                                                                        "title": "",
                                                                                        "loopArgs": [
                                                                                            "",
                                                                                            ""
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "componentName": "Tooltip",
                                                                                        "id": "node_oclw7dx8d11",
                                                                                        "props": {
                                                                                            "title": {
                                                                                                "type": "JSExpression",
                                                                                                "value": "this.i18n('copy')"
                                                                                            },
                                                                                            "defaultOpen": false,
                                                                                            "autoAdjustOverflow": true,
                                                                                            "arrowPointAtCenter": false,
                                                                                            "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                                                            "ref": "tooltip-fe43eb8a",
                                                                                            "_unsafe_MixedSetter____condition____select": "VariableSetter"
                                                                                        },
                                                                                        "title": "",
                                                                                        "isLocked": false,
                                                                                        "condition": {
                                                                                            "type": "JSExpression",
                                                                                            "value": "this.state.copyRecord?.id === this.record?.id ? !this.state.copied : true"
                                                                                        },
                                                                                        "conditionGroup": "",
                                                                                        "loopArgs": [
                                                                                            "",
                                                                                            ""
                                                                                        ],
                                                                                        "children": [
                                                                                            {
                                                                                                "componentName": "Button",
                                                                                                "id": "node_oclw783re62",
                                                                                                "props": {
                                                                                                    "type": "text",
                                                                                                    "children": "",
                                                                                                    "htmlType": "button",
                                                                                                    "size": "small",
                                                                                                    "shape": "default",
                                                                                                    "icon": {
                                                                                                        "type": "JSSlot",
                                                                                                        "value": [
                                                                                                            {
                                                                                                                "componentName": "Icon",
                                                                                                                "id": "node_oclw783re64",
                                                                                                                "props": {
                                                                                                                    "type": "CopyOutlined",
                                                                                                                    "size": 14,
                                                                                                                    "rotate": 0,
                                                                                                                    "spin": false,
                                                                                                                    "ref": "icon-ceb9b1a7",
                                                                                                                    "style": {
                                                                                                                        "opacity": 0.48
                                                                                                                    }
                                                                                                                },
                                                                                                                "title": "",
                                                                                                                "isLocked": false,
                                                                                                                "condition": true,
                                                                                                                "conditionGroup": "",
                                                                                                                "loopArgs": [
                                                                                                                    "",
                                                                                                                    ""
                                                                                                                ]
                                                                                                            }
                                                                                                        ],
                                                                                                        "id": "node_oclw783re63"
                                                                                                    },
                                                                                                    "block": false,
                                                                                                    "danger": false,
                                                                                                    "ghost": false,
                                                                                                    "disabled": false,
                                                                                                    "__events": {
                                                                                                        "eventDataList": [
                                                                                                            {
                                                                                                                "type": "componentEvent",
                                                                                                                "name": "onClick",
                                                                                                                "relatedEventName": "onCopy",
                                                                                                                "paramStr": "this.record"
                                                                                                            }
                                                                                                        ],
                                                                                                        "eventList": [
                                                                                                            {
                                                                                                                "name": "onClick",
                                                                                                                "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                                                                                                                "disabled": true
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "onClick": {
                                                                                                        "type": "JSFunction",
                                                                                                        "value": "function(){return this.onCopy.apply(this,Array.prototype.slice.call(arguments).concat([this.record])) }"
                                                                                                    },
                                                                                                    "ref": "button-5320b11d",
                                                                                                    "style": {}
                                                                                                },
                                                                                                "title": "",
                                                                                                "isLocked": false,
                                                                                                "condition": true,
                                                                                                "conditionGroup": "",
                                                                                                "loopArgs": [
                                                                                                    "",
                                                                                                    ""
                                                                                                ]
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "componentName": "Tooltip",
                                                                                        "id": "node_oclw7dxb1r1",
                                                                                        "props": {
                                                                                            "title": {
                                                                                                "type": "JSExpression",
                                                                                                "value": "this.i18n('successfully')"
                                                                                            },
                                                                                            "defaultOpen": false,
                                                                                            "autoAdjustOverflow": true,
                                                                                            "arrowPointAtCenter": false,
                                                                                            "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                                                            "ref": "tooltip-fe43eb8a",
                                                                                            "_unsafe_MixedSetter____condition____select": "VariableSetter"
                                                                                        },
                                                                                        "title": "",
                                                                                        "isLocked": false,
                                                                                        "condition": {
                                                                                            "type": "JSExpression",
                                                                                            "value": "this.state.copied && this.state.copyRecord?.id === this.record?.id"
                                                                                        },
                                                                                        "conditionGroup": "",
                                                                                        "loopArgs": [
                                                                                            "",
                                                                                            ""
                                                                                        ],
                                                                                        "children": [
                                                                                            {
                                                                                                "componentName": "Button",
                                                                                                "id": "node_oclw7dxb1r2",
                                                                                                "props": {
                                                                                                    "type": "text",
                                                                                                    "children": "",
                                                                                                    "htmlType": "button",
                                                                                                    "size": "small",
                                                                                                    "shape": "default",
                                                                                                    "icon": {
                                                                                                        "type": "JSSlot",
                                                                                                        "value": [
                                                                                                            {
                                                                                                                "componentName": "Icon",
                                                                                                                "id": "node_oclw7dxb1r5",
                                                                                                                "props": {
                                                                                                                    "type": "CheckOutlined",
                                                                                                                    "size": 14,
                                                                                                                    "rotate": 0,
                                                                                                                    "spin": false,
                                                                                                                    "color": {
                                                                                                                        "type": "JSExpression",
                                                                                                                        "value": "this.utils.getStatusColor('Running')",
                                                                                                                        "mock": "#7ed321"
                                                                                                                    },
                                                                                                                    "ref": "icon-0ed10781"
                                                                                                                },
                                                                                                                "title": "",
                                                                                                                "isLocked": false,
                                                                                                                "condition": true,
                                                                                                                "conditionGroup": "",
                                                                                                                "loopArgs": [
                                                                                                                    "",
                                                                                                                    ""
                                                                                                                ]
                                                                                                            }
                                                                                                        ],
                                                                                                        "id": "node_oclw7dxb1r3"
                                                                                                    },
                                                                                                    "block": false,
                                                                                                    "danger": false,
                                                                                                    "ghost": false,
                                                                                                    "disabled": false,
                                                                                                    "__events": {
                                                                                                        "eventDataList": [],
                                                                                                        "eventList": [
                                                                                                            {
                                                                                                                "name": "onClick",
                                                                                                                "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                                                                                                                "disabled": true
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "ref": "button-5320b11d"
                                                                                                },
                                                                                                "title": "",
                                                                                                "isLocked": false,
                                                                                                "condition": true,
                                                                                                "conditionGroup": "",
                                                                                                "loopArgs": [
                                                                                                    "",
                                                                                                    ""
                                                                                                ]
                                                                                            }
                                                                                        ]
                                                                                    },
                                                                                    {
                                                                                        "componentName": "Popover",
                                                                                        "id": "node_oclx42emgh5",
                                                                                        "props": {
                                                                                            "defaultOpen": false,
                                                                                            "autoAdjustOverflow": true,
                                                                                            "arrowPointAtCenter": true,
                                                                                            "title": "",
                                                                                            "content": {
                                                                                                "type": "JSSlot",
                                                                                                "value": [
                                                                                                    {
                                                                                                        "componentName": "Space",
                                                                                                        "id": "node_oclx49rko62",
                                                                                                        "props": {
                                                                                                            "align": "start",
                                                                                                            "direction": "vertical",
                                                                                                            "wrap": false,
                                                                                                            "size": 0,
                                                                                                            "_unsafe_MixedSetter_size_select": "NumberSetter",
                                                                                                            "ref": "space-c21d3e32"
                                                                                                        },
                                                                                                        "title": "",
                                                                                                        "isLocked": false,
                                                                                                        "condition": true,
                                                                                                        "conditionGroup": "",
                                                                                                        "loopArgs": [
                                                                                                            "",
                                                                                                            ""
                                                                                                        ],
                                                                                                        "children": [
                                                                                                            {
                                                                                                                "componentName": "Box",
                                                                                                                "id": "node_oclx49srs01",
                                                                                                                "props": {
                                                                                                                    "id": "box-4404c1660725",
                                                                                                                    "padding": "",
                                                                                                                    "margin": "",
                                                                                                                    "twinkle": false,
                                                                                                                    "bordered": false,
                                                                                                                    "hoverable": false,
                                                                                                                    "loading": false,
                                                                                                                    "style": {
                                                                                                                        "maxWidth": "410px",
                                                                                                                        "overflowX": "auto"
                                                                                                                    },
                                                                                                                    "ref": "box-7c0890d7",
                                                                                                                    "_unsafe_MixedSetter____condition____select": "VariableSetter"
                                                                                                                },
                                                                                                                "title": "",
                                                                                                                "isLocked": false,
                                                                                                                "condition": {
                                                                                                                    "type": "JSExpression",
                                                                                                                    "value": "this.state.tags?.length > 0"
                                                                                                                },
                                                                                                                "conditionGroup": "",
                                                                                                                "loopArgs": [
                                                                                                                    "",
                                                                                                                    ""
                                                                                                                ],
                                                                                                                "children": [
                                                                                                                    {
                                                                                                                        "componentName": "Tag",
                                                                                                                        "id": "node_oclx49rko61",
                                                                                                                        "props": {
                                                                                                                            "color": "",
                                                                                                                            "children": {
                                                                                                                                "type": "JSExpression",
                                                                                                                                "value": "this.item?.key + ':' + this.item?.value",
                                                                                                                                "mock": "tag"
                                                                                                                            },
                                                                                                                            "closable": false,
                                                                                                                            "ref": "tag-a72e2ba2",
                                                                                                                            "_unsafe_MixedSetter____condition____select": "BoolSetter",
                                                                                                                            "_unsafe_MixedSetter____loop____select": "VariableSetter",
                                                                                                                            "style": {
                                                                                                                                "borderRadius": "12px",
                                                                                                                                "marginBottom": "6px"
                                                                                                                            }
                                                                                                                        },
                                                                                                                        "title": "",
                                                                                                                        "isLocked": false,
                                                                                                                        "condition": true,
                                                                                                                        "conditionGroup": "",
                                                                                                                        "loop": {
                                                                                                                            "type": "JSExpression",
                                                                                                                            "value": "this.state.tags"
                                                                                                                        },
                                                                                                                        "loopArgs": [
                                                                                                                            "",
                                                                                                                            ""
                                                                                                                        ]
                                                                                                                    }
                                                                                                                ]
                                                                                                            },
                                                                                                            {
                                                                                                                "componentName": "Button",
                                                                                                                "id": "node_oclx49rko64",
                                                                                                                "props": {
                                                                                                                    "children": {
                                                                                                                        "type": "JSExpression",
                                                                                                                        "value": "this.i18n('editTag')"
                                                                                                                    },
                                                                                                                    "htmlType": "button",
                                                                                                                    "size": "small",
                                                                                                                    "shape": "default",
                                                                                                                    "icon": "",
                                                                                                                    "block": false,
                                                                                                                    "danger": false,
                                                                                                                    "ghost": false,
                                                                                                                    "disabled": false,
                                                                                                                    "type": "link",
                                                                                                                    "_unsafe_MixedSetter_children_select": "VariableSetter",
                                                                                                                    "__events": {
                                                                                                                        "eventDataList": [
                                                                                                                            {
                                                                                                                                "type": "componentEvent",
                                                                                                                                "name": "onClick",
                                                                                                                                "relatedEventName": "onEditTagClick"
                                                                                                                            }
                                                                                                                        ],
                                                                                                                        "eventList": [
                                                                                                                            {
                                                                                                                                "name": "onClick",
                                                                                                                                "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                                                                                                                                "disabled": true
                                                                                                                            }
                                                                                                                        ]
                                                                                                                    },
                                                                                                                    "onClick": {
                                                                                                                        "type": "JSFunction",
                                                                                                                        "value": "function(){return this.onEditTagClick.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                                                                                                                    },
                                                                                                                    "ref": "button-3be2adcb",
                                                                                                                    "_unsafe_MixedSetter____condition____select": "BoolSetter"
                                                                                                                },
                                                                                                                "title": "",
                                                                                                                "isLocked": false,
                                                                                                                "condition": true,
                                                                                                                "conditionGroup": "",
                                                                                                                "loopArgs": [
                                                                                                                    "",
                                                                                                                    ""
                                                                                                                ]
                                                                                                            }
                                                                                                        ]
                                                                                                    }
                                                                                                ],
                                                                                                "id": "node_oclx42h3m61"
                                                                                            },
                                                                                            "placement": "right",
                                                                                            "trigger": "hover",
                                                                                            "_unsafe_MixedSetter_title_select": "SlotSetter",
                                                                                            "__events": {
                                                                                                "eventDataList": [
                                                                                                    {
                                                                                                        "type": "componentEvent",
                                                                                                        "name": "onOpenChange",
                                                                                                        "relatedEventName": "onOpenChange",
                                                                                                        "paramStr": "this.record"
                                                                                                    }
                                                                                                ],
                                                                                                "eventList": [
                                                                                                    {
                                                                                                        "name": "onOpenChange",
                                                                                                        "template": "onOpenChange(open,${extParams}){\n// 显示隐藏的回调\nconsole.log('onOpenChange',open);}",
                                                                                                        "disabled": true
                                                                                                    }
                                                                                                ]
                                                                                            },
                                                                                            "onOpenChange": {
                                                                                                "type": "JSFunction",
                                                                                                "value": "function(){return this.onOpenChange.apply(this,Array.prototype.slice.call(arguments).concat([this.record])) }"
                                                                                            },
                                                                                            "_unsafe_MixedSetter_content_select": "SlotSetter",
                                                                                            "open": {
                                                                                                "type": "JSExpression",
                                                                                                "value": "this.state.open && this.record?.id === this.state.currentId"
                                                                                            },
                                                                                            "ref": "popover-8545a3bd",
                                                                                            "_unsafe_MixedSetter____condition____select": "BoolSetter",
                                                                                            "zIndex": 199
                                                                                        },
                                                                                        "title": "",
                                                                                        "isLocked": false,
                                                                                        "condition": true,
                                                                                        "conditionGroup": "",
                                                                                        "loopArgs": [
                                                                                            "",
                                                                                            ""
                                                                                        ],
                                                                                        "children": [
                                                                                            {
                                                                                                "componentName": "Button",
                                                                                                "id": "node_oclx42emgh1",
                                                                                                "props": {
                                                                                                    "type": "text",
                                                                                                    "children": "",
                                                                                                    "htmlType": "button",
                                                                                                    "size": "small",
                                                                                                    "shape": "default",
                                                                                                    "icon": {
                                                                                                        "type": "JSSlot",
                                                                                                        "value": [
                                                                                                            {
                                                                                                                "componentName": "Icon",
                                                                                                                "id": "node_oclx42emgh4",
                                                                                                                "props": {
                                                                                                                    "type": "TagsOutlined",
                                                                                                                    "size": 14,
                                                                                                                    "rotate": 0,
                                                                                                                    "spin": false,
                                                                                                                    "color": "",
                                                                                                                    "ref": "icon-0ed10781",
                                                                                                                    "style": {
                                                                                                                        "opacity": "0.48"
                                                                                                                    }
                                                                                                                },
                                                                                                                "title": "",
                                                                                                                "isLocked": false,
                                                                                                                "condition": true,
                                                                                                                "conditionGroup": "",
                                                                                                                "loopArgs": [
                                                                                                                    "",
                                                                                                                    ""
                                                                                                                ]
                                                                                                            }
                                                                                                        ],
                                                                                                        "id": "node_oclx42emgh2"
                                                                                                    },
                                                                                                    "block": false,
                                                                                                    "danger": false,
                                                                                                    "ghost": false,
                                                                                                    "disabled": false,
                                                                                                    "__events": {
                                                                                                        "eventDataList": [],
                                                                                                        "eventList": [
                                                                                                            {
                                                                                                                "name": "onClick",
                                                                                                                "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                                                                                                                "disabled": true
                                                                                                            }
                                                                                                        ]
                                                                                                    },
                                                                                                    "ref": "button-9qvdo90"
                                                                                                },
                                                                                                "title": "",
                                                                                                "isLocked": false,
                                                                                                "condition": true,
                                                                                                "conditionGroup": "",
                                                                                                "loopArgs": [
                                                                                                    "",
                                                                                                    ""
                                                                                                ]
                                                                                            }
                                                                                        ]
                                                                                    }
                                                                                ]
                                                                            },
                                                                            {
                                                                                "componentName": "Typography.Text",
                                                                                "id": "node_oclm8i74vkt",
                                                                                "props": {
                                                                                    "children": {
                                                                                        "type": "JSExpression",
                                                                                        "value": "this.record?.version",
                                                                                        "mock": "text"
                                                                                    },
                                                                                    "code": false,
                                                                                    "delete": false,
                                                                                    "disabled": false,
                                                                                    "keyboard": false,
                                                                                    "mark": false,
                                                                                    "ref": "typography.text-96ac6647",
                                                                                    "strong": false,
                                                                                    "style": {
                                                                                        "paddingLeft": "8px",
                                                                                        "whiteSpace": "nowrap"
                                                                                    },
                                                                                    "type": "default",
                                                                                    "underline": false
                                                                                },
                                                                                "condition": true,
                                                                                "conditionGroup": "",
                                                                                "isLocked": false,
                                                                                "title": "",
                                                                                "loopArgs": [
                                                                                    "",
                                                                                    ""
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ],
                                                        "id": "node_ocloit6pjpd"
                                                    },
                                                    "title": {
                                                        "type": "JSExpression",
                                                        "value": "this.i18n('name')"
                                                    },
                                                    "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                    "filteredValue": []
                                                },
                                                {
                                                    "align": "left",
                                                    "fixed": "",
                                                    "filteredValue": {
                                                        "type": "JSExpression",
                                                        "value": "this.state.query.engine",
                                                        "mock": []
                                                    },
                                                    "title": {
                                                        "type": "JSExpression",
                                                        "value": "this.i18n('engine')"
                                                    },
                                                    "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                    "dataIndex": "engine",
                                                    "filters": {
                                                        "type": "JSExpression",
                                                        "value": "this.state.clusterFilters?.engine?.sort((a, b) => {\n  return a.text.localeCompare(b.text);\n})"
                                                    }
                                                },
                                                {
                                                    "align": "left",
                                                    "fixed": "",
                                                    "filteredValue": [],
                                                    "title": {
                                                        "type": "JSExpression",
                                                        "value": "this.i18n('mode')"
                                                    },
                                                    "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                    "dataIndex": "mode",
                                                    "render": {
                                                        "type": "JSSlot",
                                                        "params": [
                                                            "text",
                                                            "record",
                                                            "index"
                                                        ],
                                                        "value": [
                                                            {
                                                                "componentName": "Typography.Text",
                                                                "id": "node_ocm193wgvb2",
                                                                "props": {
                                                                    "children": {
                                                                        "type": "JSExpression",
                                                                        "value": "this.getMode(this.record)",
                                                                        "mock": "text"
                                                                    },
                                                                    "code": false,
                                                                    "delete": false,
                                                                    "disabled": false,
                                                                    "mark": false,
                                                                    "keyboard": false,
                                                                    "underline": false,
                                                                    "strong": false
                                                                },
                                                                "title": "",
                                                                "isLocked": false,
                                                                "condition": true,
                                                                "conditionGroup": ""
                                                            }
                                                        ],
                                                        "id": "node_ocm193wgvb1"
                                                    }
                                                },
                                                {
                                                    "align": "left",
                                                    "dataIndex": "status",
                                                    "fixed": "",
                                                    "key": "status",
                                                    "render": {
                                                        "type": "JSSlot",
                                                        "params": [
                                                            "text",
                                                            "record",
                                                            "index"
                                                        ],
                                                        "value": [
                                                            {
                                                                "componentName": "Space",
                                                                "id": "node_ocm193wgvb3",
                                                                "props": {
                                                                    "align": "start",
                                                                    "direction": "horizontal",
                                                                    "wrap": false,
                                                                    "style": {
                                                                        "display": "flex",
                                                                        "alignItems": "center"
                                                                    }
                                                                },
                                                                "title": "",
                                                                "isLocked": false,
                                                                "condition": true,
                                                                "conditionGroup": "",
                                                                "children": [
                                                                    {
                                                                        "componentName": "Box",
                                                                        "id": "node_ocm193wgvb4",
                                                                        "props": {
                                                                            "id": "box-9fdf955b6cf4",
                                                                            "padding": "",
                                                                            "margin": "",
                                                                            "twinkle": false,
                                                                            "bordered": false,
                                                                            "hoverable": false,
                                                                            "loading": false,
                                                                            "style": {
                                                                                "type": "JSExpression",
                                                                                "value": "{\n  background: this.utils.getStatusColor(this.record?.status),\n  width: 6,\n  height: 6,\n  position: \"relative\",\n  top: -1,\n  borderRadius: 3\n}"
                                                                            }
                                                                        },
                                                                        "title": "",
                                                                        "isLocked": false,
                                                                        "condition": true,
                                                                        "conditionGroup": ""
                                                                    },
                                                                    {
                                                                        "componentName": "Typography.Text",
                                                                        "id": "node_ocm193wgvb5",
                                                                        "props": {
                                                                            "children": {
                                                                                "type": "JSExpression",
                                                                                "value": "this.record?.status || \"unkown\"",
                                                                                "mock": "text"
                                                                            },
                                                                            "code": false,
                                                                            "delete": false,
                                                                            "disabled": false,
                                                                            "keyboard": false,
                                                                            "mark": false,
                                                                            "strong": false,
                                                                            "underline": false,
                                                                            "type": "default",
                                                                            "style": {
                                                                                "type": "JSExpression",
                                                                                "value": "{\n  color: this.utils.getStatusColor(this.record?.status),\n  whiteSpace: \"nowrap\"\n}",
                                                                                "mock": {}
                                                                            },
                                                                            "ref": "typography.text-24e1cac6"
                                                                        },
                                                                        "condition": true,
                                                                        "conditionGroup": "",
                                                                        "isLocked": false,
                                                                        "title": "",
                                                                        "loopArgs": [
                                                                            "",
                                                                            ""
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ],
                                                        "id": "node_oclxjvbavg1"
                                                    },
                                                    "title": {
                                                        "type": "JSExpression",
                                                        "value": "this.i18n('status')"
                                                    },
                                                    "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                    "_unsafe_MixedSetter_sorter_select": "FunctionSetter",
                                                    "filters": {
                                                        "type": "JSExpression",
                                                        "value": "this.state.clusterFilters?.status"
                                                    },
                                                    "filteredValue": {
                                                        "type": "JSExpression",
                                                        "value": "this.state.query.status",
                                                        "mock": []
                                                    }
                                                },
                                                {
                                                    "title": {
                                                        "type": "JSExpression",
                                                        "value": "this.i18n('cloudProvider')"
                                                    },
                                                    "dataIndex": "provider",
                                                    "align": "left",
                                                    "fixed": "",
                                                    "render": {
                                                        "type": "JSSlot",
                                                        "params": [
                                                            "text",
                                                            "record",
                                                            "index"
                                                        ],
                                                        "value": [
                                                            {
                                                                "componentName": "Space",
                                                                "id": "node_ocm1043dwn1",
                                                                "props": {
                                                                    "align": "start",
                                                                    "direction": "horizontal",
                                                                    "wrap": false,
                                                                    "style": {
                                                                        "display": "flex",
                                                                        "alignItems": "center"
                                                                    }
                                                                },
                                                                "title": "",
                                                                "isLocked": false,
                                                                "condition": true,
                                                                "conditionGroup": "",
                                                                "children": [
                                                                    {
                                                                        "componentName": "Avatar",
                                                                        "id": "node_ocm1043dwn2",
                                                                        "props": {
                                                                            "src": {
                                                                                "type": "JSExpression",
                                                                                "value": "this.utils.getCloudIcon(this.record?.cloudProvider)",
                                                                                "mock": "https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png"
                                                                            },
                                                                            "shape": "circle",
                                                                            "size": 30,
                                                                            "alt": "",
                                                                            "gap": 0
                                                                        },
                                                                        "title": "",
                                                                        "isLocked": false,
                                                                        "condition": true,
                                                                        "conditionGroup": ""
                                                                    },
                                                                    {
                                                                        "componentName": "Space",
                                                                        "id": "node_ocm1043dwn3",
                                                                        "props": {
                                                                            "align": "start",
                                                                            "direction": "vertical",
                                                                            "wrap": false
                                                                        },
                                                                        "title": "",
                                                                        "isLocked": false,
                                                                        "condition": true,
                                                                        "conditionGroup": "",
                                                                        "children": [
                                                                            {
                                                                                "componentName": "Space",
                                                                                "id": "node_ocm1043dwn4",
                                                                                "props": {
                                                                                    "align": "start",
                                                                                    "direction": "horizontal",
                                                                                    "wrap": false
                                                                                },
                                                                                "title": "",
                                                                                "isLocked": false,
                                                                                "condition": true,
                                                                                "conditionGroup": "",
                                                                                "children": [
                                                                                    {
                                                                                        "componentName": "Typography.Text",
                                                                                        "id": "node_ocm1043dwn5",
                                                                                        "props": {
                                                                                            "children": {
                                                                                                "type": "JSExpression",
                                                                                                "value": "this.record.environmentName",
                                                                                                "mock": "text"
                                                                                            },
                                                                                            "code": false,
                                                                                            "delete": false,
                                                                                            "disabled": false,
                                                                                            "mark": false,
                                                                                            "keyboard": false,
                                                                                            "underline": false,
                                                                                            "strong": false,
                                                                                            "style": {
                                                                                                "whiteSpace": "nowrap"
                                                                                            }
                                                                                        },
                                                                                        "title": "",
                                                                                        "isLocked": false,
                                                                                        "condition": true,
                                                                                        "conditionGroup": ""
                                                                                    }
                                                                                ]
                                                                            }
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ],
                                                        "id": "node_oclxmu77mh1"
                                                    },
                                                    "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                    "filteredValue": []
                                                },
                                                {
                                                    "dataIndex": "codeShort",
                                                    "align": "left",
                                                    "fixed": "",
                                                    "filteredValue": [],
                                                    "key": "classCode",
                                                    "title": {
                                                        "type": "JSExpression",
                                                        "value": "this.i18n('classCode')"
                                                    },
                                                    "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                    "render": {
                                                        "type": "JSSlot",
                                                        "params": [
                                                            "text",
                                                            "record",
                                                            "index"
                                                        ],
                                                        "value": [
                                                            {
                                                                "componentName": "Typography.Text",
                                                                "id": "node_oclxjvbavg2",
                                                                "props": {
                                                                    "children": {
                                                                        "type": "JSExpression",
                                                                        "value": "this.text ? `${_.toUpper(this.text)}${this.record?.storage ? ' / ' + this.record?.storage : '' }` : ''",
                                                                        "mock": "text"
                                                                    },
                                                                    "code": false,
                                                                    "delete": false,
                                                                    "disabled": false,
                                                                    "mark": false,
                                                                    "keyboard": false,
                                                                    "underline": false,
                                                                    "strong": false,
                                                                    "style": {
                                                                        "whiteSpace": "nowrap"
                                                                    }
                                                                },
                                                                "title": "",
                                                                "isLocked": false,
                                                                "condition": true,
                                                                "conditionGroup": ""
                                                            }
                                                        ],
                                                        "id": "node_oclxjtr66h2"
                                                    }
                                                },
                                                {
                                                    "title": {
                                                        "type": "JSExpression",
                                                        "value": "this.i18n(\"age\")"
                                                    },
                                                    "dataIndex": "createdAt",
                                                    "align": "left",
                                                    "fixed": "",
                                                    "render": {
                                                        "type": "JSSlot",
                                                        "params": [
                                                            "text",
                                                            "record",
                                                            "index"
                                                        ],
                                                        "value": [
                                                            {
                                                                "componentName": "Typography.Text",
                                                                "id": "node_oclxmu77mh2",
                                                                "props": {
                                                                    "children": {
                                                                        "type": "JSExpression",
                                                                        "value": "moment(this.record.createdAt).fromNow()",
                                                                        "mock": "text"
                                                                    },
                                                                    "code": false,
                                                                    "delete": false,
                                                                    "disabled": false,
                                                                    "mark": false,
                                                                    "keyboard": false,
                                                                    "underline": false,
                                                                    "strong": false,
                                                                    "type": "default",
                                                                    "style": {
                                                                        "whiteSpace": "nowrap"
                                                                    }
                                                                },
                                                                "title": "",
                                                                "isLocked": false,
                                                                "condition": true,
                                                                "conditionGroup": ""
                                                            }
                                                        ],
                                                        "id": "node_ocm10421z36"
                                                    },
                                                    "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                    "_unsafe_MixedSetter_sorter_select": "BoolSetter",
                                                    "filteredValue": [],
                                                    "sortOrder": {
                                                        "type": "JSExpression",
                                                        "value": "this.state.query.columnKey == \"createdAt\" ? this.state.query.order : null"
                                                    },
                                                    "sorter": true,
                                                    "key": "createdAt"
                                                },
                                                {
                                                    "align": "center",
                                                    "dataIndex": "action",
                                                    "fixed": "",
                                                    "render": {
                                                        "type": "JSSlot",
                                                        "params": [
                                                            "text",
                                                            "record",
                                                            "index"
                                                        ],
                                                        "value": [
                                                            {
                                                                "componentName": "Tooltip",
                                                                "id": "node_oclxmu77mh3",
                                                                "props": {
                                                                    "title": {
                                                                        "type": "JSExpression",
                                                                        "value": "this.i18n('nopermission')"
                                                                    },
                                                                    "defaultOpen": false,
                                                                    "autoAdjustOverflow": true,
                                                                    "arrowPointAtCenter": false,
                                                                    "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                                    "ref": "tooltip-p98x5rw",
                                                                    "_unsafe_MixedSetter____condition____select": "VariableSetter",
                                                                    "trigger": "hover",
                                                                    "mouseEnterDelay": {
                                                                        "type": "JSExpression",
                                                                        "value": "!this.utils.hasPermission(\"cluster.write\") ? 0 : 1*60*60"
                                                                    }
                                                                },
                                                                "title": "",
                                                                "isLocked": false,
                                                                "condition": {
                                                                    "type": "JSExpression",
                                                                    "value": "this.record?.metadata?.name !== \"apecloud-pg\""
                                                                },
                                                                "conditionGroup": "",
                                                                "loopArgs": [
                                                                    "",
                                                                    ""
                                                                ],
                                                                "children": [
                                                                    {
                                                                        "componentName": "Button",
                                                                        "id": "node_oclxmu77mh4",
                                                                        "props": {
                                                                            "__events": {
                                                                                "eventDataList": [
                                                                                    {
                                                                                        "name": "onClick",
                                                                                        "paramStr": "this.record",
                                                                                        "relatedEventName": "onDeleteCluster",
                                                                                        "type": "componentEvent"
                                                                                    }
                                                                                ],
                                                                                "eventList": [
                                                                                    {
                                                                                        "disabled": true,
                                                                                        "name": "onClick",
                                                                                        "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}"
                                                                                    }
                                                                                ]
                                                                            },
                                                                            "block": false,
                                                                            "children": {
                                                                                "type": "JSExpression",
                                                                                "value": "this.i18n('delete')"
                                                                            },
                                                                            "danger": true,
                                                                            "disabled": {
                                                                                "type": "JSExpression",
                                                                                "value": "!this.utils.hasPermission(\"cluster.write\")",
                                                                                "mock": false
                                                                            },
                                                                            "ghost": false,
                                                                            "htmlType": "button",
                                                                            "loading": false,
                                                                            "onClick": {
                                                                                "type": "JSFunction",
                                                                                "value": "function(){this.onDeleteCluster.apply(this,Array.prototype.slice.call(arguments).concat([this.record])) }"
                                                                            },
                                                                            "shape": "default",
                                                                            "size": "small",
                                                                            "type": "text",
                                                                            "ref": "button-zioyp7i",
                                                                            "_unsafe_MixedSetter____condition____select": "BoolSetter",
                                                                            "_unsafe_MixedSetter_children_select": "VariableSetter",
                                                                            "style": {},
                                                                            "icon": ""
                                                                        },
                                                                        "condition": true,
                                                                        "conditionGroup": "",
                                                                        "isLocked": false,
                                                                        "title": "",
                                                                        "loopArgs": [
                                                                            "",
                                                                            ""
                                                                        ]
                                                                    }
                                                                ]
                                                            }
                                                        ],
                                                        "id": "node_ocm1043dwn6"
                                                    },
                                                    "_unsafe_MixedSetter_title_select": "VariableSetter",
                                                    "title": {
                                                        "type": "JSExpression",
                                                        "value": "this.i18n('action')"
                                                    },
                                                    "hidden": false,
                                                    "filteredValue": []
                                                }
                                            ],
                                            "dataSource": {
                                                "type": "JSExpression",
                                                "value": "this.getClustersFilterResult()",
                                                "mock": [
                                                    {
                                                        "address": "西湖区湖底公园1号",
                                                        "age": 32,
                                                        "id": "1",
                                                        "name": "胡彦斌"
                                                    },
                                                    {
                                                        "address": "滨江区网商路699号",
                                                        "age": 28,
                                                        "id": "2",
                                                        "name": "王一博"
                                                    }
                                                ]
                                            },
                                            "loading": {
                                                "type": "JSExpression",
                                                "value": "this.state.clustersLoading",
                                                "mock": true
                                            },
                                            "pagination": {
                                                "pageSize": {
                                                    "type": "JSExpression",
                                                    "value": "this.state.query.pageSize",
                                                    "mock": 10
                                                },
                                                "size": "default",
                                                "total": {
                                                    "type": "JSExpression",
                                                    "value": "_.size(this.getClustersFilterResult())"
                                                },
                                                "current": {
                                                    "type": "JSExpression",
                                                    "value": "this.state.query.current"
                                                },
                                                "showSizeChanger": true
                                            },
                                            "ref": "table-386665dd",
                                            "rowKey": "id",
                                            "rowSelection": false,
                                            "scroll": {
                                                "scrollToFirstRowOnChange": true,
                                                "x": true
                                            },
                                            "showHeader": true,
                                            "size": "default",
                                            "tableLayout": "",
                                            "title": "",
                                            "style": {},
                                            "bordered": true,
                                            "onChange": {
                                                "type": "JSFunction",
                                                "value": "function(){return this.onTableDataChange.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                                            },
                                            "_unsafe_MixedSetter_scroll": {
                                                "x_select": "BoolSetter"
                                            }
                                        },
                                        "condition": {
                                            "type": "JSExpression",
                                            "value": "this.state.clusters.length || this.state.hasTag"
                                        },
                                        "conditionGroup": "",
                                        "isLocked": false,
                                        "title": "表格模式",
                                        "loopArgs": [
                                            "",
                                            ""
                                        ]
                                    }
                                ]
                            },
                            {
                                "componentName": "Card",
                                "id": "node_oclmjd57bmk",
                                "props": {
                                    "title": "",
                                    "bordered": true,
                                    "hoverable": false,
                                    "loading": true,
                                    "size": "default",
                                    "type": "default",
                                    "style": {
                                        "borderRadius": "16px"
                                    },
                                    "ref": "card-92da7b1b",
                                    "_unsafe_MixedSetter____condition____select": "BoolSetter"
                                },
                                "title": "Cluster数据未加载占位符",
                                "isLocked": false,
                                "condition": false,
                                "conditionGroup": "",
                                "loopArgs": [
                                    "",
                                    ""
                                ]
                            }
                        ]
                    },
                    {
                        "componentName": "Block",
                        "id": "node_oclty787j62",
                        "props": {
                            "uuid": "412b426d-cd1c-4f59-a1c2-ea16c08f523e",
                            "_unsafe_MixedSetter____condition____select": "VariableSetter"
                        },
                        "title": "",
                        "isLocked": false,
                        "condition": {
                            "type": "JSExpression",
                            "value": "!this.utils.hasPermission(\"cluster.read\")"
                        },
                        "conditionGroup": "",
                        "loopArgs": [
                            "",
                            ""
                        ]
                    },
                    {
                        "componentName": "Modal",
                        "id": "node_oclps06kbz1",
                        "props": {
                            "title": {
                                "type": "JSExpression",
                                "value": "this.i18n('edit_tags')"
                            },
                            "okText": {
                                "type": "JSExpression",
                                "value": "this.i18n('ok')"
                            },
                            "cancelText": {
                                "type": "JSExpression",
                                "value": "this.i18n('cancel')"
                            },
                            "open": {
                                "type": "JSExpression",
                                "value": "this.state.tagVisible",
                                "mock": false
                            },
                            "destroyOnClose": true,
                            "centered": false,
                            "closable": true,
                            "confirmLoading": false,
                            "forceRender": false,
                            "keyboard": true,
                            "mask": true,
                            "maskClosable": true,
                            "bodyStyle": {},
                            "maskStyle": {},
                            "_unsafe_MixedSetter_title_select": "VariableSetter",
                            "width": "720px",
                            "style": {},
                            "__events": {
                                "eventDataList": [
                                    {
                                        "type": "componentEvent",
                                        "name": "onCancel",
                                        "relatedEventName": "cancelEditTags"
                                    },
                                    {
                                        "type": "componentEvent",
                                        "name": "onOk",
                                        "relatedEventName": "onSaveTags"
                                    }
                                ],
                                "eventList": [
                                    {
                                        "name": "afterClose",
                                        "templete": "onCancel(${extParams}){\n// 完全关闭后的回调\nconsole.log('afterClose');}",
                                        "disabled": false
                                    },
                                    {
                                        "name": "onCancel",
                                        "template": "onCancel(${extParams}){\n// 点击遮罩层或右上角叉或取消按钮的回调\nconsole.log('onCancel');}",
                                        "disabled": true
                                    },
                                    {
                                        "name": "onOk",
                                        "template": "onOk(${extParams}){\n// 点击确定回调\nconsole.log('onOk');}",
                                        "disabled": true
                                    }
                                ]
                            },
                            "onCancel": {
                                "type": "JSFunction",
                                "value": "function(){return this.cancelEditTags.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                            },
                            "ref": "modal-e17a1fb5",
                            "_unsafe_MixedSetter_okText_select": "VariableSetter",
                            "_unsafe_MixedSetter_cancelText_select": "VariableSetter",
                            "onOk": {
                                "type": "JSFunction",
                                "value": "function(){return this.onSaveTags.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                            },
                            "zIndex": 200
                        },
                        "title": "",
                        "isLocked": false,
                        "condition": true,
                        "conditionGroup": "",
                        "loopArgs": [
                            "",
                            ""
                        ],
                        "children": [
                            {
                                "componentName": "Space",
                                "id": "node_oclps199sus",
                                "props": {
                                    "align": "start",
                                    "direction": "horizontal",
                                    "wrap": false
                                },
                                "title": "",
                                "isLocked": false,
                                "condition": true,
                                "conditionGroup": "",
                                "children": [
                                    {
                                        "componentName": "Form.Item",
                                        "id": "node_oclps06kbz5",
                                        "props": {
                                            "label": {
                                                "type": "JSExpression",
                                                "value": "this.i18n('tag_key')"
                                            },
                                            "colon": true,
                                            "required": true,
                                            "noStyle": false,
                                            "valuePropName": "value",
                                            "requiredobj": {
                                                "required": "",
                                                "message": ""
                                            },
                                            "typeobj": {
                                                "message": ""
                                            },
                                            "lenobj": {
                                                "max": 0,
                                                "min": 0,
                                                "message": ""
                                            },
                                            "patternobj": {
                                                "pattern": "",
                                                "message": ""
                                            },
                                            "_unsafe_MixedSetter_label_select": "VariableSetter",
                                            "style": {
                                                "width": "310px",
                                                "marginBottom": "16px"
                                            }
                                        },
                                        "title": "",
                                        "isLocked": false,
                                        "condition": true,
                                        "conditionGroup": "",
                                        "children": [
                                            {
                                                "componentName": "Typography.Text",
                                                "id": "node_oclps199suz",
                                                "props": {
                                                    "children": "",
                                                    "code": false,
                                                    "delete": false,
                                                    "disabled": false,
                                                    "mark": false,
                                                    "keyboard": false,
                                                    "underline": false,
                                                    "strong": false
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": true,
                                                "conditionGroup": ""
                                            }
                                        ]
                                    },
                                    {
                                        "componentName": "Form.Item",
                                        "id": "node_oclps06kbz6",
                                        "props": {
                                            "label": {
                                                "type": "JSExpression",
                                                "value": "this.i18n('tag_val')"
                                            },
                                            "colon": true,
                                            "required": false,
                                            "noStyle": false,
                                            "valuePropName": "value",
                                            "typeobj": {
                                                "message": ""
                                            },
                                            "lenobj": {
                                                "max": 0,
                                                "min": 0,
                                                "message": ""
                                            },
                                            "patternobj": {
                                                "pattern": "",
                                                "message": ""
                                            },
                                            "requiredobj": {
                                                "required": "",
                                                "message": ""
                                            },
                                            "_unsafe_MixedSetter_label_select": "VariableSetter",
                                            "style": {
                                                "width": "310px",
                                                "marginBottom": "16px",
                                                "marginLeft": "12px"
                                            }
                                        },
                                        "title": "",
                                        "isLocked": false,
                                        "condition": true,
                                        "conditionGroup": "",
                                        "children": [
                                            {
                                                "componentName": "Typography.Text",
                                                "id": "node_oclps199su10",
                                                "props": {
                                                    "children": "",
                                                    "code": false,
                                                    "delete": false,
                                                    "disabled": false,
                                                    "mark": false,
                                                    "keyboard": false,
                                                    "underline": false,
                                                    "strong": false
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": true,
                                                "conditionGroup": ""
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "componentName": "Form",
                                "id": "node_oclx9t1mwj1",
                                "props": {
                                    "labelCol": {
                                        "span": 6
                                    },
                                    "wrapperCol": {
                                        "span": 14
                                    },
                                    "onValuesChange": {
                                        "type": "JSExpression",
                                        "value": "function() {\n      const self = this;\n      try {\n        return (function onValuesChange(changedValues, allValues) {\n  console.log('onValuesChange', changedValues, allValues);\n}).apply(self, arguments);\n      } catch(e) {\n        console.warn('call function which parsed by lowcode failed: ', e);\n        return e.message;\n      }\n    }"
                                    },
                                    "onFinish": {
                                        "type": "JSExpression",
                                        "value": "function() {\n      const self = this;\n      try {\n        return (function onFinish(values) {\n  console.log('onFinish', values);\n}).apply(self, arguments);\n      } catch(e) {\n        console.warn('call function which parsed by lowcode failed: ', e);\n        return e.message;\n      }\n    }"
                                    },
                                    "onFinishFailed": {
                                        "type": "JSExpression",
                                        "value": "function() {\n      const self = this;\n      try {\n        return (function onFinishFailed({ values, errorFields, outOfDate }) {\n  console.log('onFinishFailed', values, errorFields, outOfDate);\n}).apply(self, arguments);\n      } catch(e) {\n        console.warn('call function which parsed by lowcode failed: ', e);\n        return e.message;\n      }\n    }"
                                    },
                                    "name": "basic",
                                    "ref": "tagsForm",
                                    "values": {
                                        "type": "JSExpression",
                                        "value": "this.state.tags"
                                    },
                                    "colon": true,
                                    "hideRequiredMark": false,
                                    "preserve": true,
                                    "scrollToFirstError": true,
                                    "validateMessages": {
                                        "required": "'${name}' 不能为空"
                                    }
                                },
                                "title": "",
                                "isLocked": false,
                                "condition": true,
                                "conditionGroup": "",
                                "loopArgs": [
                                    "",
                                    ""
                                ],
                                "children": [
                                    {
                                        "componentName": "Space",
                                        "id": "node_oclps0v2trl",
                                        "props": {
                                            "align": "start",
                                            "direction": "horizontal",
                                            "wrap": false,
                                            "style": {},
                                            "ref": "space-6d4ac629",
                                            "_unsafe_MixedSetter____loop____select": "VariableSetter"
                                        },
                                        "title": "",
                                        "isLocked": false,
                                        "condition": true,
                                        "conditionGroup": "",
                                        "loop": {
                                            "type": "JSExpression",
                                            "value": "this.state.tags"
                                        },
                                        "loopArgs": [
                                            "",
                                            ""
                                        ],
                                        "children": [
                                            {
                                                "componentName": "Form.Item",
                                                "id": "node_oclx9t1mwjy",
                                                "props": {
                                                    "label": "",
                                                    "name": {
                                                        "type": "JSExpression",
                                                        "value": "`${this.index}.key`"
                                                    },
                                                    "colon": true,
                                                    "required": true,
                                                    "noStyle": false,
                                                    "valuePropName": "value",
                                                    "requiredobj": {
                                                        "required": true,
                                                        "message": ""
                                                    },
                                                    "typeobj": {
                                                        "message": ""
                                                    },
                                                    "lenobj": {
                                                        "message": ""
                                                    },
                                                    "patternobj": {
                                                        "pattern": "",
                                                        "message": ""
                                                    }
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": true,
                                                "conditionGroup": "",
                                                "children": [
                                                    {
                                                        "componentName": "Input",
                                                        "id": "node_oclps0v2trt",
                                                        "props": {
                                                            "placeholder": "",
                                                            "bordered": true,
                                                            "disabled": {
                                                                "type": "JSExpression",
                                                                "value": "this.item?.id",
                                                                "mock": false
                                                            },
                                                            "size": "middle",
                                                            "style": {
                                                                "width": "310px"
                                                            },
                                                            "ref": "input-50e0b026"
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": "",
                                                        "loopArgs": [
                                                            "",
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "componentName": "Typography.Text",
                                                "id": "node_oclps0v2tru",
                                                "props": {
                                                    "children": ":",
                                                    "code": false,
                                                    "delete": false,
                                                    "disabled": false,
                                                    "mark": false,
                                                    "keyboard": false,
                                                    "underline": false,
                                                    "strong": false,
                                                    "style": {
                                                        "marginTop": "6px",
                                                        "display": "block"
                                                    }
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": true,
                                                "conditionGroup": ""
                                            },
                                            {
                                                "componentName": "Form.Item",
                                                "id": "node_oclx9t1mwj11",
                                                "props": {
                                                    "label": "",
                                                    "colon": true,
                                                    "required": true,
                                                    "noStyle": false,
                                                    "valuePropName": "value",
                                                    "typeobj": {
                                                        "message": ""
                                                    },
                                                    "lenobj": {
                                                        "message": ""
                                                    },
                                                    "patternobj": {
                                                        "pattern": "",
                                                        "message": ""
                                                    },
                                                    "name": {
                                                        "type": "JSExpression",
                                                        "value": "`${this.index}.value`"
                                                    },
                                                    "requiredobj": {
                                                        "required": true,
                                                        "message": ""
                                                    }
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": true,
                                                "conditionGroup": "",
                                                "children": [
                                                    {
                                                        "componentName": "Input",
                                                        "id": "node_oclx9t1mwj12",
                                                        "props": {
                                                            "placeholder": "",
                                                            "bordered": true,
                                                            "disabled": {
                                                                "type": "JSExpression",
                                                                "value": "this.item?.id",
                                                                "mock": false
                                                            },
                                                            "size": "middle",
                                                            "style": {
                                                                "width": "310px"
                                                            },
                                                            "ref": "input-50e0b026"
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": "",
                                                        "loopArgs": [
                                                            "",
                                                            ""
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "componentName": "Form.Item",
                                                "id": "node_oclx9t1mwj13",
                                                "props": {
                                                    "label": "",
                                                    "colon": true,
                                                    "required": false,
                                                    "noStyle": false,
                                                    "valuePropName": "value",
                                                    "typeobj": {
                                                        "message": ""
                                                    },
                                                    "lenobj": {
                                                        "max": 0,
                                                        "min": 0,
                                                        "message": ""
                                                    },
                                                    "patternobj": {
                                                        "pattern": "",
                                                        "message": ""
                                                    },
                                                    "name": {
                                                        "type": "JSExpression",
                                                        "value": "`${this.index}.id`"
                                                    },
                                                    "requiredobj": {
                                                        "required": true,
                                                        "message": ""
                                                    }
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": true,
                                                "conditionGroup": "",
                                                "children": [
                                                    {
                                                        "componentName": "Button",
                                                        "id": "node_oclps0v2trv",
                                                        "props": {
                                                            "type": "link",
                                                            "children": "",
                                                            "htmlType": "button",
                                                            "size": "middle",
                                                            "shape": "default",
                                                            "icon": {
                                                                "type": "JSSlot",
                                                                "value": [
                                                                    {
                                                                        "componentName": "Icon",
                                                                        "id": "node_oclps0v2trx",
                                                                        "props": {
                                                                            "type": "DeleteOutlined",
                                                                            "size": 20,
                                                                            "rotate": 0,
                                                                            "spin": false
                                                                        },
                                                                        "title": "",
                                                                        "isLocked": false,
                                                                        "condition": true,
                                                                        "conditionGroup": ""
                                                                    }
                                                                ],
                                                                "id": "node_oclps0v2trw"
                                                            },
                                                            "block": false,
                                                            "danger": false,
                                                            "ghost": false,
                                                            "disabled": false,
                                                            "__events": {
                                                                "eventDataList": [
                                                                    {
                                                                        "type": "componentEvent",
                                                                        "name": "onClick",
                                                                        "relatedEventName": "onDeleteTag",
                                                                        "paramStr": "this.item,this.index"
                                                                    }
                                                                ],
                                                                "eventList": [
                                                                    {
                                                                        "name": "onClick",
                                                                        "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                                                                        "disabled": true
                                                                    }
                                                                ]
                                                            },
                                                            "onClick": {
                                                                "type": "JSFunction",
                                                                "value": "function(){return this.onDeleteTag.apply(this,Array.prototype.slice.call(arguments).concat([this.item,this.index])) }"
                                                            }
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": ""
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "componentName": "Form",
                                "id": "node_oclx9t1mwjp",
                                "props": {
                                    "labelCol": {
                                        "span": 6
                                    },
                                    "wrapperCol": {
                                        "span": 14
                                    },
                                    "onValuesChange": {
                                        "type": "JSFunction",
                                        "value": "function(){return this.onTagsChange.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                                    },
                                    "name": "basic",
                                    "ref": "newTagsForm",
                                    "colon": true,
                                    "hideRequiredMark": false,
                                    "preserve": true,
                                    "scrollToFirstError": true,
                                    "validateMessages": {
                                        "required": "'${name}' 不能为空"
                                    },
                                    "values": {
                                        "type": "JSExpression",
                                        "value": "this.state.newTags"
                                    },
                                    "__events": {
                                        "eventDataList": [
                                            {
                                                "type": "componentEvent",
                                                "name": "onValuesChange",
                                                "relatedEventName": "onTagsChange"
                                            }
                                        ],
                                        "eventList": [
                                            {
                                                "name": "onFinish",
                                                "template": "onFinish(values,${extParams}){\n// 提交表单且数据验证成功后回调事件\nconsole.log('onFinish',values);}",
                                                "disabled": false
                                            },
                                            {
                                                "name": "onFinishFailed",
                                                "template": "onFinishFailed({values,errorFields,outOfDate},${extParams}){\n// 提交表单且数据验证失败后回调事件\nconsole.log('onFinishFailed',values, errorFields, outOfDate);}",
                                                "disabled": false
                                            },
                                            {
                                                "name": "onFieldsChange",
                                                "template": "onFieldsChange(changedFields,allFields,${extParams}){\n// 字段更新时触发回调事件\nconsole.log('onFieldsChange',changedFields,allFields);}",
                                                "disabled": false
                                            },
                                            {
                                                "name": "onValuesChange",
                                                "template": "onValuesChange(changedValues,allValues,${extParams}){\n// 字段值更新时触发回调事件\nconsole.log('onValuesChange',changedValues,allValues);}",
                                                "disabled": true
                                            }
                                        ]
                                    }
                                },
                                "title": "",
                                "isLocked": false,
                                "condition": true,
                                "conditionGroup": "",
                                "children": [
                                    {
                                        "componentName": "Space",
                                        "id": "node_oclx9t1mwjq",
                                        "props": {
                                            "align": "start",
                                            "direction": "horizontal",
                                            "wrap": false,
                                            "style": {},
                                            "ref": "space-a0fd599f",
                                            "_unsafe_MixedSetter____condition____select": "BoolSetter",
                                            "_unsafe_MixedSetter____loop____select": "VariableSetter"
                                        },
                                        "title": "",
                                        "isLocked": false,
                                        "condition": true,
                                        "conditionGroup": "",
                                        "loopArgs": [
                                            "",
                                            ""
                                        ],
                                        "loop": {
                                            "type": "JSExpression",
                                            "value": "this.state.newTags"
                                        },
                                        "children": [
                                            {
                                                "componentName": "Form.Item",
                                                "id": "node_oclx9t1mwj1p",
                                                "props": {
                                                    "label": "",
                                                    "name": {
                                                        "type": "JSExpression",
                                                        "value": "`${this.index}.key`"
                                                    },
                                                    "labelAlign": "right",
                                                    "colon": true,
                                                    "required": true,
                                                    "noStyle": false,
                                                    "valuePropName": "value",
                                                    "requiredobj": {
                                                        "required": true,
                                                        "message": ""
                                                    },
                                                    "typeobj": {
                                                        "message": ""
                                                    },
                                                    "lenobj": {
                                                        "message": ""
                                                    },
                                                    "patternobj": {
                                                        "pattern": "",
                                                        "message": ""
                                                    }
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": true,
                                                "conditionGroup": "",
                                                "children": [
                                                    {
                                                        "componentName": "Input",
                                                        "id": "node_oclx9t1mwjr",
                                                        "props": {
                                                            "placeholder": "",
                                                            "bordered": true,
                                                            "disabled": false,
                                                            "size": "middle",
                                                            "style": {
                                                                "width": "310px"
                                                            }
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": ""
                                                    }
                                                ]
                                            },
                                            {
                                                "componentName": "Typography.Text",
                                                "id": "node_oclx9t1mwjs",
                                                "props": {
                                                    "children": ":",
                                                    "code": false,
                                                    "delete": false,
                                                    "disabled": false,
                                                    "mark": false,
                                                    "keyboard": false,
                                                    "underline": false,
                                                    "strong": false,
                                                    "style": {
                                                        "marginTop": "6px",
                                                        "display": "block"
                                                    }
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": true,
                                                "conditionGroup": ""
                                            },
                                            {
                                                "componentName": "Form.Item",
                                                "id": "node_oclx9t1mwj1s",
                                                "props": {
                                                    "label": "",
                                                    "name": {
                                                        "type": "JSExpression",
                                                        "value": "`${this.index}.value`"
                                                    },
                                                    "colon": true,
                                                    "required": true,
                                                    "noStyle": false,
                                                    "valuePropName": "value",
                                                    "typeobj": {
                                                        "message": ""
                                                    },
                                                    "lenobj": {
                                                        "message": ""
                                                    },
                                                    "patternobj": {
                                                        "pattern": "",
                                                        "message": ""
                                                    },
                                                    "requiredobj": {
                                                        "required": true,
                                                        "message": ""
                                                    }
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": true,
                                                "conditionGroup": "",
                                                "children": [
                                                    {
                                                        "componentName": "Input",
                                                        "id": "node_oclx9t1mwj1t",
                                                        "props": {
                                                            "placeholder": "",
                                                            "bordered": true,
                                                            "disabled": false,
                                                            "size": "middle",
                                                            "style": {
                                                                "width": "310px"
                                                            }
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": ""
                                                    }
                                                ]
                                            },
                                            {
                                                "componentName": "Form.Item",
                                                "id": "node_oclx9t1mwj1u",
                                                "props": {
                                                    "label": "",
                                                    "name": {
                                                        "type": "JSExpression",
                                                        "value": "`${this.index}.id`"
                                                    },
                                                    "colon": true,
                                                    "required": false,
                                                    "noStyle": false,
                                                    "valuePropName": "value",
                                                    "typeobj": {
                                                        "message": ""
                                                    },
                                                    "lenobj": {
                                                        "max": 0,
                                                        "min": 0,
                                                        "message": ""
                                                    },
                                                    "patternobj": {
                                                        "pattern": "",
                                                        "message": ""
                                                    },
                                                    "requiredobj": {
                                                        "required": false,
                                                        "message": ""
                                                    }
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": true,
                                                "conditionGroup": "",
                                                "children": [
                                                    {
                                                        "componentName": "Button",
                                                        "id": "node_oclx9t1mwju",
                                                        "props": {
                                                            "type": "link",
                                                            "children": "",
                                                            "htmlType": "button",
                                                            "size": "middle",
                                                            "shape": "default",
                                                            "icon": {
                                                                "type": "JSSlot",
                                                                "value": [
                                                                    {
                                                                        "componentName": "Icon",
                                                                        "id": "node_oclx9t1mwjx",
                                                                        "props": {
                                                                            "type": "DeleteOutlined",
                                                                            "size": 20,
                                                                            "rotate": 0,
                                                                            "spin": false
                                                                        },
                                                                        "title": "",
                                                                        "isLocked": false,
                                                                        "condition": true,
                                                                        "conditionGroup": ""
                                                                    }
                                                                ],
                                                                "id": "node_oclx9t1mwjv"
                                                            },
                                                            "block": false,
                                                            "danger": false,
                                                            "ghost": false,
                                                            "disabled": false,
                                                            "__events": {
                                                                "eventDataList": [
                                                                    {
                                                                        "type": "componentEvent",
                                                                        "name": "onClick",
                                                                        "relatedEventName": "onDeleteTag",
                                                                        "paramStr": "this.item,this.index"
                                                                    }
                                                                ],
                                                                "eventList": [
                                                                    {
                                                                        "name": "onClick",
                                                                        "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                                                                        "disabled": true
                                                                    }
                                                                ]
                                                            },
                                                            "onClick": {
                                                                "type": "JSFunction",
                                                                "value": "function(){return this.onDeleteTag.apply(this,Array.prototype.slice.call(arguments).concat([this.item,this.index])) }"
                                                            }
                                                        },
                                                        "title": "",
                                                        "isLocked": false,
                                                        "condition": true,
                                                        "conditionGroup": ""
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            {
                                "componentName": "Row",
                                "id": "node_oclps199su1",
                                "props": {
                                    "align": "top",
                                    "justify": "start",
                                    "wrap": false
                                },
                                "title": "",
                                "isLocked": false,
                                "condition": true,
                                "conditionGroup": "",
                                "children": [
                                    {
                                        "componentName": "Col",
                                        "id": "node_oclps199su2",
                                        "props": {
                                            "span": 24,
                                            "order": 0,
                                            "style": {
                                                "textAlign": "center",
                                                "marginTop": "16px"
                                            }
                                        },
                                        "title": "",
                                        "isLocked": false,
                                        "condition": true,
                                        "conditionGroup": "",
                                        "children": [
                                            {
                                                "componentName": "Button",
                                                "id": "node_oclps164rx4",
                                                "props": {
                                                    "type": "dashed",
                                                    "children": {
                                                        "type": "JSExpression",
                                                        "value": "this.i18n('add_tags')"
                                                    },
                                                    "htmlType": "button",
                                                    "size": "middle",
                                                    "shape": "default",
                                                    "icon": {
                                                        "type": "JSSlot",
                                                        "value": [
                                                            {
                                                                "componentName": "Icon",
                                                                "id": "node_oclps164rx6",
                                                                "props": {
                                                                    "type": "PlusOutlined",
                                                                    "size": 16,
                                                                    "rotate": 0,
                                                                    "spin": false
                                                                },
                                                                "title": "",
                                                                "isLocked": false,
                                                                "condition": true,
                                                                "conditionGroup": ""
                                                            }
                                                        ],
                                                        "id": "node_oclps164rx5"
                                                    },
                                                    "block": false,
                                                    "danger": false,
                                                    "ghost": false,
                                                    "disabled": false,
                                                    "style": {
                                                        "width": "100%",
                                                        "display": "flex",
                                                        "alignItems": "center",
                                                        "justifyContent": "center",
                                                        "marginBottom": "20px"
                                                    },
                                                    "_unsafe_MixedSetter_children_select": "VariableSetter",
                                                    "ref": "button-6feaca99",
                                                    "_unsafe_MixedSetter____condition____select": "VariableSetter",
                                                    "__events": {
                                                        "eventDataList": [
                                                            {
                                                                "type": "componentEvent",
                                                                "name": "onClick",
                                                                "relatedEventName": "onAddTags"
                                                            }
                                                        ],
                                                        "eventList": [
                                                            {
                                                                "name": "onClick",
                                                                "template": "onClick(event,${extParams}){\n// 点击按钮时的回调\nconsole.log('onClick', event);}",
                                                                "disabled": true
                                                            }
                                                        ]
                                                    },
                                                    "onClick": {
                                                        "type": "JSFunction",
                                                        "value": "function(){return this.onAddTags.apply(this,Array.prototype.slice.call(arguments).concat([])) }"
                                                    }
                                                },
                                                "title": "",
                                                "isLocked": false,
                                                "condition": {
                                                    "type": "JSExpression",
                                                    "value": "this.state.tags.length < 20 ? true : false"
                                                },
                                                "conditionGroup": "",
                                                "loopArgs": [
                                                    "",
                                                    ""
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        ],
        "i18n": {
            "zh-CN": {
                "create": "创建集群",
                "status": "集群状态",
                "search": "搜索集群名称",
                "name": "集群",
                "policy": "删除保护",
                "age": "创建时间",
                "confirm": "请确认",
                "delete": "删除",
                "desc": "基于 Kubernetes 的开源、云中立 DBaaS，提高生产力、极大降低成本、提升业务连续性",
                "documentation": "说明文档",
                "noSearchResult": "没有搜索结果",
                "welcome_info": "您目前还没有任何集群，请创建您的第一个集群。",
                "welcome": "欢迎使用KubeBlocks Cloud",
                "Delete": "未开启",
                "DoNotTerminate": "已开启",
                "deleteProtect": "删除保护已开启，请先关闭删除保护。",
                "cloudProvider": "环境",
                "action": "操作",
                "add_tags": "添加标签",
                "tags": "标签",
                "edit_tags": "编辑标签",
                "tag_key": "标签键",
                "tag_val": "标签值",
                "env_name": "选择环境名称",
                "nopermission": "没有权限",
                "copy": "复制",
                "successfully": "复制成功！",
                "_tags": "标签：",
                "no_tag": "暂无标签",
                "editTag": "编辑标签",
                "success": "保存成功",
                "cancel": "取消",
                "ok": "确认",
                "select_tag": "选择标签",
                "noData": "暂无标签",
                "classCode": "规格/存储",
                "mode": "架构",
                "engine": "引擎"
            },
            "en-US": {
                "create": "Create Cluster",
                "status": "Status",
                "search": "Search",
                "name": "Cluster",
                "policy": "Remove Protection",
                "age": "Creation Time",
                "confirm": "Confirm",
                "delete": "Delete",
                "desc": "An open-source and cloud-neutral DBaaS with Kubernetes. Improved productivity, cost-efficiency and business continuity.",
                "documentation": "Documentation",
                "noSearchResult": "No search results",
                "welcome_info": "No cluster created currently, create your cluster. ",
                "welcome": "Welcome to KubeBlocks Cloud",
                "Delete": "Off",
                "DoNotTerminate": "On",
                "deleteProtect": "Delete Protection is enabled, please disable Delete Protection first.",
                "cloudProvider": "Environment",
                "action": "Action",
                "add_tags": "Add Tag",
                "tags": "Tags",
                "edit_tags": "Edit",
                "tag_key": "Key",
                "tag_val": "Value",
                "env_name": "Select Environment",
                "nopermission": "No permission",
                "copy": "Copy",
                "successfully": "Copy successfully!",
                "_tags": "Tags:",
                "no_tag": "No tag yet",
                "editTag": "Edit Tag",
                "success": "Save Successful",
                "cancel": "Cancel",
                "ok": "Confirm",
                "select_tag": "Select tag",
                "noData": "No Tag",
                "classCode": "ClassCode/Storage",
                "mode": "Mode",
                "engine": "Engine"
            }
        }
    },
    "thumbnails": "platform/6c8905d2-2c32-4374-9620-21da20d91054/thumbnails/ec9599aa-9d12-40d3-9986-eedb0cf7d382.png",
    "tags": [],
    "description": null,
    "platformUuid": "6c8905d2-2c32-4374-9620-21da20d91054",
    "type": "page",
    "createdAt": "2024-06-07T02:26:06.996Z",
    "updatedAt": "2024-10-29T04:06:23.486Z"
}